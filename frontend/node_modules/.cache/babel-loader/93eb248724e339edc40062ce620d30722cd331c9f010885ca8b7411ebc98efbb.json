{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./TopArtistsList.css';import{DateTime}from\"luxon\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const stateToAirports={\"Alabama\":[\"BHM\",\"HSV\",\"MGM\",\"MOB\"],// Birmingham, Huntsville, Montgomery, Mobile\n\"Alaska\":[\"ANC\",\"FAI\",\"JNU\",\"SEA\"],// Anchorage, Fairbanks, Juneau, plus Seattle (common hub)\n\"Arizona\":[\"PHX\",\"TUS\",\"SDL\"],// Phoenix, Tucson, Scottsdale (private/charter)\n\"Arkansas\":[\"XNA\",\"LIT\",\"FSM\"],// Northwest Arkansas, Little Rock, Fort Smith\n\"California\":[\"LAX\",\"SFO\",\"SAN\",\"SJC\",\"OAK\",\"SMF\",\"BUR\",\"ONT\",\"SNA\",\"LGB\"],// Major CA airports\n\"Colorado\":[\"DEN\",\"COS\",\"GJT\"],// Denver, Colorado Springs, Grand Junction\n\"Connecticut\":[\"BDL\",\"HVN\"],// Bradley (Hartford), Tweed New Haven\n\"Delaware\":[\"ILG\"],// Wilmington (small, near Philadelphia)\n\"District of Columbia\":[\"DCA\",\"IAD\",\"BWI\"],// Reagan, Dulles, Baltimore-Washington\n\"Florida\":[\"MIA\",\"FLL\",\"TPA\",\"MCO\",\"RSW\",\"JAX\",\"PBI\"],// Miami, Fort Lauderdale, Tampa, Orlando, Southwest Florida, Jacksonville, Palm Beach\n\"Georgia\":[\"ATL\",\"SAV\",\"AGS\",\"MCN\"],// Atlanta, Savannah, Augusta, Macon\n\"Hawaii\":[\"HNL\",\"OGG\",\"KOA\",\"LIH\"],// Honolulu, Maui, Kona, Lihue\n\"Idaho\":[\"BOI\",\"IDA\"],// Boise, Idaho Falls\n\"Illinois\":[\"ORD\",\"MDW\",\"SPI\",\"RFD\"],// Oâ€™Hare, Midway, Springfield, Rockford\n\"Indiana\":[\"IND\",\"SBN\"],// Indianapolis, South Bend\n\"Iowa\":[\"DSM\",\"CID\",\"MLI\"],// Des Moines, Cedar Rapids, Moline\n\"Kansas\":[\"ICT\",\"MCI\",\"FOE\"],// Wichita, Kansas City, Topeka\n\"Kentucky\":[\"CVG\",\"SDF\",\"LEX\"],// Cincinnati/Northern KY, Louisville, Lexington\n\"Louisiana\":[\"MSY\",\"BTR\",\"LFT\"],// New Orleans, Baton Rouge, Lafayette\n\"Maine\":[\"PWM\",\"BGR\"],// Portland, Bangor\n\"Maryland\":[\"BWI\",\"MTN\"],// Baltimore-Washington, Martin State\n\"Massachusetts\":[\"BOS\",\"ORH\",\"EWB\"],// Boston Logan, Worcester, New Bedford\n\"Michigan\":[\"DTW\",\"GRR\",\"MBS\",\"AZO\"],// Detroit, Grand Rapids, Saginaw, Kalamazoo\n\"Minnesota\":[\"MSP\",\"DLH\",\"RST\"],// Minneapolis-St Paul, Duluth, Rochester\n\"Mississippi\":[\"JAN\",\"GPT\"],// Jackson, Gulfport\n\"Missouri\":[\"STL\",\"MCI\",\"SGF\"],// St. Louis, Kansas City, Springfield\n\"Montana\":[\"BIL\",\"GTF\",\"MSO\"],// Billings, Great Falls, Missoula\n\"Nebraska\":[\"OMA\",\"LNK\"],// Omaha, Lincoln\n\"Nevada\":[\"LAS\",\"RNO\"],// Las Vegas, Reno\n\"New Hampshire\":[\"MHT\",\"CON\"],// Manchester, Concord (small)\n\"New Jersey\":[\"EWR\",\"ACY\",\"TTN\"],// Newark, Atlantic City, Trenton-Mercer\n\"New Mexico\":[\"ABQ\",\"SRR\"],// Albuquerque, Santa Rosa (small)\n\"New York\":[\"JFK\",\"LGA\",\"EWR\",\"BUF\",\"ROC\",\"SYR\",\"ALB\"],// JFK, LaGuardia, Newark, Buffalo, Rochester, Syracuse, Albany\n\"North Carolina\":[\"CLT\",\"RDU\",\"GSO\",\"ILM\"],// Charlotte, Raleigh-Durham, Greensboro, Wilmington\n\"North Dakota\":[\"FAR\",\"GFK\"],// Fargo, Grand Forks\n\"Ohio\":[\"CLE\",\"CMH\",\"CVG\",\"DAY\"],// Cleveland, Columbus, Cincinnati, Dayton\n\"Oklahoma\":[\"OKC\",\"TUL\"],// Oklahoma City, Tulsa\n\"Oregon\":[\"PDX\",\"EUG\"],// Portland, Eugene\n\"Pennsylvania\":[\"PHL\",\"PIT\",\"AVP\",\"MDT\"],// Philadelphia, Pittsburgh, Wilkes-Barre/Scranton, Harrisburg\n\"Rhode Island\":[\"PVD\"],// Providence\n\"South Carolina\":[\"CHS\",\"GSP\",\"CAE\"],// Charleston, Greenville-Spartanburg, Columbia\n\"South Dakota\":[\"FSD\",\"RAP\"],// Sioux Falls, Rapid City\n\"Tennessee\":[\"BNA\",\"MEM\",\"CHA\"],// Nashville, Memphis, Chattanooga\n\"Texas\":[\"DFW\",\"IAH\",\"AUS\",\"SAT\",\"DAL\",\"HOU\"],// Dallas-Fort Worth, Houston, Austin, San Antonio, Dallas Love, Houston Hobby\n\"Utah\":[\"SLC\",\"PVU\"],// Salt Lake City, Provo (small)\n\"Vermont\":[\"BTV\"],// Burlington\n\"Virginia\":[\"DCA\",\"ORF\",\"RIC\"],// Reagan, Norfolk, Richmond\n\"Washington\":[\"SEA\",\"GEG\",\"PDX\"],// Seattle, Spokane, Portland (nearby)\n\"West Virginia\":[\"CRW\",\"HTS\"],// Charleston, Huntington\n\"Wisconsin\":[\"MKE\",\"MSN\",\"GRB\"],// Milwaukee, Madison, Green Bay\n\"Wyoming\":[\"JAC\"]// Jackson Hole\n};const airlineNames={\"6X\":\"Amadeus Six\",\"PR\":\"Philippine Airlines\",\"AA\":\"American Airlines\",\"DL\":\"Delta Air Lines\",\"UA\":\"United Airlines\",\"WN\":\"Southwest Airlines\",\"AS\":\"Alaska Airlines\",\"B6\":\"JetBlue Airways\",\"AF\":\"Air France\",\"LH\":\"Lufthansa\",\"EK\":\"Emirates\",\"AC\":\"Air Canada\",\"BA\":\"British Airways\",\"CX\":\"Cathay Pacific\",\"QF\":\"Qantas\",\"SQ\":\"Singapore Airlines\",\"JL\":\"Japan Airlines\",\"NH\":\"All Nippon Airways\",\"IB\":\"Iberia\",\"AZ\":\"Alitalia\",\"KL\":\"KLM Royal Dutch Airlines\",\"TK\":\"Turkish Airlines\",\"SA\":\"South African Airways\",\"NZ\":\"Air New Zealand\",\"EY\":\"Etihad Airways\",\"QR\":\"Qatar Airways\",\"MS\":\"EgyptAir\",\"CX\":\"Cathay Pacific\",\"FI\":\"Icelandair\",\"DL\":\"Delta Air Lines\",\"F9\":\"Frontier Airlines\",\"G4\":\"Allegiant Air\",\"HA\":\"Hawaiian Airlines\",\"VX\":\"Virgin America\",\"WN\":\"Southwest Airlines\",\"YV\":\"Mesa Airlines\"};const formatWithTimezone=(dateTimeStr,state)=>{const stateTimezones={\"Alabama\":\"America/Chicago\",\"Alaska\":\"America/Anchorage\",\"Arizona\":\"America/Phoenix\",\"Arkansas\":\"America/Chicago\",\"California\":\"America/Los_Angeles\",\"Colorado\":\"America/Denver\",\"Connecticut\":\"America/New_York\",\"Delaware\":\"America/New_York\",\"District of Columbia\":\"America/New_York\",\"Florida\":\"America/New_York\",// see note below\n\"Georgia\":\"America/New_York\",\"Hawaii\":\"Pacific/Honolulu\",\"Idaho\":\"America/Boise\",// mostly Mountain Time\n\"Illinois\":\"America/Chicago\",\"Indiana\":\"America/Indiana/Indianapolis\",// mostly Eastern\n\"Iowa\":\"America/Chicago\",\"Kansas\":\"America/Chicago\",// some parts Mountain Time, but mostly Chicago\n\"Kentucky\":\"America/New_York\",// mostly Eastern\n\"Louisiana\":\"America/Chicago\",\"Maine\":\"America/New_York\",\"Maryland\":\"America/New_York\",\"Massachusetts\":\"America/New_York\",\"Michigan\":\"America/Detroit\",// Eastern time\n\"Minnesota\":\"America/Chicago\",\"Mississippi\":\"America/Chicago\",\"Missouri\":\"America/Chicago\",\"Montana\":\"America/Denver\",\"Nebraska\":\"America/Chicago\",// parts in Mountain Time, but mostly Chicago\n\"Nevada\":\"America/Los_Angeles\",// parts in Mountain Time\n\"New Hampshire\":\"America/New_York\",\"New Jersey\":\"America/New_York\",\"New Mexico\":\"America/Denver\",\"New York\":\"America/New_York\",\"North Carolina\":\"America/New_York\",\"North Dakota\":\"America/Chicago\",// parts Mountain Time but mostly Chicago\n\"Ohio\":\"America/New_York\",\"Oklahoma\":\"America/Chicago\",\"Oregon\":\"America/Los_Angeles\",// some parts in Mountain Time\n\"Pennsylvania\":\"America/New_York\",\"Rhode Island\":\"America/New_York\",\"South Carolina\":\"America/New_York\",\"South Dakota\":\"America/Chicago\",// parts Mountain Time but mostly Chicago\n\"Tennessee\":\"America/Chicago\",// mostly Central Time (East Tennessee is Eastern)\n\"Texas\":\"America/Chicago\",// mostly Central, but West Texas is Mountain Time\n\"Utah\":\"America/Denver\",\"Vermont\":\"America/New_York\",\"Virginia\":\"America/New_York\",\"Washington\":\"America/Los_Angeles\",\"West Virginia\":\"America/New_York\",\"Wisconsin\":\"America/Chicago\",\"Wyoming\":\"America/Denver\"};const timezone=stateTimezones[state]||\"UTC\";return DateTime.fromISO(dateTimeStr,{zone:\"utc\"}).setZone(timezone).toFormat(\"MMM dd, yyyy hh:mm a ZZZZ\");};console.log('Raw stateToAirports:',stateToAirports);console.log('Is empty?',Object.keys(stateToAirports).length===0);const normalizeKey=str=>str.toLowerCase().replace(/\\s+/g,'');const normalizedStateToAirports=Object.fromEntries(Object.entries(stateToAirports).map(_ref=>{let[state,airports]=_ref;return[normalizeKey(state),airports];}));console.log('Normalized keys:',Object.keys(normalizedStateToAirports));const TopArtistsList=_ref2=>{let{topArtists,onShowRelatedArtists,onShowConcerts}=_ref2;const[concertData,setConcertData]=useState({});const[expandedArtists,setExpandedArtists]=useState({});const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[locationFilter,setLocationFilter]=useState('');const[originAirport,setOriginAirport]=useState('SFO');// NEW: flexible arrival/departure days\nconst[daysBefore,setDaysBefore]=useState(1);const[daysAfter,setDaysAfter]=useState(1);const[flightOffers,setFlightOffers]=useState({});const[loadingFlights,setLoadingFlights]=useState({});const[errorFlights,setErrorFlights]=useState({});const toggleExpanded=artistName=>{setExpandedArtists(prev=>({...prev,[artistName]:!prev[artistName]}));};const toTitleCase=str=>{if(!str)return'';return str.trim().toLowerCase().split(' ').filter(Boolean).map(word=>word.charAt(0).toUpperCase()+word.slice(1)).join(' ');};const delay=ms=>new Promise(resolve=>setTimeout(resolve,ms));const stateAbbrevToFull={AL:\"Alabama\",AK:\"Alaska\",AZ:\"Arizona\",AR:\"Arkansas\",CA:\"California\",CO:\"Colorado\",CT:\"Connecticut\",DE:\"Delaware\",DC:\"District of Columbia\",FL:\"Florida\",GA:\"Georgia\",HI:\"Hawaii\",ID:\"Idaho\",IL:\"Illinois\",IN:\"Indiana\",IA:\"Iowa\",KS:\"Kansas\",KY:\"Kentucky\",LA:\"Louisiana\",ME:\"Maine\",MD:\"Maryland\",MA:\"Massachusetts\",MI:\"Michigan\",MN:\"Minnesota\",MS:\"Mississippi\",MO:\"Missouri\",MT:\"Montana\",NE:\"Nebraska\",NV:\"Nevada\",NH:\"New Hampshire\",NJ:\"New Jersey\",NM:\"New Mexico\",NY:\"New York\",NC:\"North Carolina\",ND:\"North Dakota\",OH:\"Ohio\",OK:\"Oklahoma\",OR:\"Oregon\",PA:\"Pennsylvania\",RI:\"Rhode Island\",SC:\"South Carolina\",SD:\"South Dakota\",TN:\"Tennessee\",TX:\"Texas\",UT:\"Utah\",VT:\"Vermont\",VA:\"Virginia\",WA:\"Washington\",WV:\"West Virginia\",WI:\"Wisconsin\",WY:\"Wyoming\"};useEffect(()=>{const fetchConcerts=async()=>{setLoading(true);setError(null);const data={};for(const[index,artist]of topArtists.entries()){try{if(index>0){await delay(300);}const BACKEND_URL=process.env.REACT_APP_BACKEND_URL||'https://vibent-api.onrender.com';const url=`${BACKEND_URL}/concerts?artistName=${encodeURIComponent(artist.name)}`;const res=await fetch(url);if(!res.ok){const text=await res.text();throw new Error(`API returned ${res.status}: ${text}`);}const json=await res.json();data[artist.name]=Array.isArray(json.events)?json.events:[];}catch(error){data[artist.name]=[];console.error(`Concert fetch error for ${artist.name}:`,error);setError(error.message);}}setConcertData(data);setLoading(false);};if(topArtists.length>0){fetchConcerts();}},[topArtists]);const fetchFlightsForEvent=async event=>{const{state,date,country,id}=event;const BACKEND_URL=process.env.REACT_APP_BACKEND_URL||'https://vibent-api.onrender.com';console.log('Show flights clicked for event ID:',id);console.log('Show flights clicked for event:',event);if(!date){alert('Missing concert date to fetch flights.');return;}if(!id){console.warn('Event missing unique id:',event);alert('Cannot fetch flights: event ID missing.');return;}// Normalize and map state abbrev to full state name first\nlet normalizedState='';if(state){if(state.length===2){normalizedState=stateAbbrevToFull[state.toUpperCase()]||state;}else{normalizedState=toTitleCase(state.trim());}}const normalizedCountry=country?toTitleCase(country.trim()):'';console.log('Normalized State:',normalizedState);console.log('Normalized Country:',normalizedCountry);const lookupKeyState=normalizeKey(normalizedState);const lookupKeyCountry=normalizeKey(normalizedCountry);console.log('Lookup Key State:',lookupKeyState);console.log('Lookup Key Country:',lookupKeyCountry);// Strictly check if keys exist in mapping before using them\nlet destinationAirports=[];if(lookupKeyState&&normalizedStateToAirports.hasOwnProperty(lookupKeyState)){destinationAirports=normalizedStateToAirports[lookupKeyState];console.log('Using airports from state:',normalizedState,destinationAirports);}else if(lookupKeyCountry&&normalizedStateToAirports.hasOwnProperty(lookupKeyCountry)){destinationAirports=normalizedStateToAirports[lookupKeyCountry];console.log('Using airports from country:',normalizedCountry,destinationAirports);}else{console.warn('No airports found for:',normalizedState||normalizedCountry);alert(`No airport codes found for ${state||country}.`);return;}if(!destinationAirports||destinationAirports.length===0){alert(`No airport codes found for ${state||country}.`);return;}// Compute flexible date range\nconst eventDateObj=new Date(date);const startDate=new Date(eventDateObj);startDate.setDate(startDate.getDate()-daysBefore);const endDate=new Date(eventDateObj);endDate.setDate(endDate.getDate()+daysAfter);const formatDate=d=>d.toISOString().split('T')[0];const departureDate=formatDate(startDate);const returnDate=formatDate(endDate);console.log('Fetching flights for all destination airports:',destinationAirports);setLoadingFlights(prev=>({...prev,[id]:true}));setErrorFlights(prev=>({...prev,[id]:null}));try{let allFlights=[];// Sequential fetch per destination airport to avoid rate limits / API overload\nfor(const destination of destinationAirports){var _json$data;const url=`${BACKEND_URL}/flights?origin=${originAirport}&destination=${destination}&departureDate=${departureDate}&returnDate=${returnDate}`;console.log('Fetching flights from:',originAirport,'to:',destination);const res=await fetch(url);if(!res.ok){const text=await res.text();throw new Error(`Flights API returned ${res.status} for destination ${destination}: ${text}`);}const json=await res.json();if(((_json$data=json.data)===null||_json$data===void 0?void 0:_json$data.length)>0){allFlights=allFlights.concat(json.data);}// Optional: small delay between requests to avoid hammering API\nawait delay(100);}// Optional: deduplicate flights if needed (by some unique id)\n// For now, just setting all combined flights\nsetFlightOffers(prev=>({...prev,[id]:allFlights}));}catch(error){console.error(`Error fetching flights for event ${id}:`,error);setErrorFlights(prev=>({...prev,[id]:error.message}));setFlightOffers(prev=>({...prev,[id]:[]}));}finally{setLoadingFlights(prev=>({...prev,[id]:false}));}};// Flatten and deduplicate airport codes for origin airport dropdown\nconst allAirports=[...new Set(Object.values(stateToAirports).flat())];return/*#__PURE__*/_jsxs(\"div\",{className:\"top-artists-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Your Top Spotify Artists\"}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:'20px 0',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"originAirport\",style:{marginRight:'10px'},children:\"Select your home airport:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"originAirport\",value:originAirport,onChange:e=>setOriginAirport(e.target.value),style:{padding:'8px',fontSize:'1rem',borderRadius:'6px'},children:allAirports.map(code=>/*#__PURE__*/_jsx(\"option\",{value:code,children:code},code))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:'10px 0',textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Arrive up to\",' ',/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",value:daysBefore,onChange:e=>setDaysBefore(Number(e.target.value)),style:{width:'40px',margin:'0 5px'}}),' ',\"day(s) before\"]}),/*#__PURE__*/_jsxs(\"label\",{style:{marginLeft:'15px'},children:[\"Leave up to\",' ',/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",value:daysAfter,onChange:e=>setDaysAfter(Number(e.target.value)),style:{width:'40px',margin:'0 5px'}}),' ',\"day(s) after\"]})]}),/*#__PURE__*/_jsx(\"div\",{style:{margin:'20px 0',textAlign:'center'},children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Filter by City or State (e.g. New York)\",value:locationFilter,onChange:e=>setLocationFilter(e.target.value),style:{padding:'10px',fontSize:'1rem',borderRadius:'8px',border:'1px solid #ccc',width:'250px'}})}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",style:{color:'red',margin:'10px 0'},children:[\"Error loading concerts: \",error]}),/*#__PURE__*/_jsx(\"ul\",{className:\"artist-list\",children:topArtists.map((artist,index)=>{var _artist$images,_artist$images$;const concerts=concertData[artist.name]||[];const filteredConcerts=concerts.filter(event=>{const query=locationFilter.toLowerCase();return!locationFilter||event.city&&event.city.toLowerCase().includes(query)||event.state&&event.state.toLowerCase().includes(query)||event.country&&event.country.toLowerCase().includes(query)||event.venue&&event.venue.toLowerCase().includes(query)||event.name&&event.name.toLowerCase().includes(query);});return/*#__PURE__*/_jsxs(\"li\",{className:\"artist-card\",children:[/*#__PURE__*/_jsx(\"img\",{src:(_artist$images=artist.images)===null||_artist$images===void 0?void 0:(_artist$images$=_artist$images[0])===null||_artist$images$===void 0?void 0:_artist$images$.url,alt:artist.name,className:\"artist-img\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"artist-name\",children:artist.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"artist-popularity\",children:[\"Popularity: \",artist.popularity]}),loading?/*#__PURE__*/_jsx(\"p\",{className:\"loading-concerts\",children:\"Loading concerts...\"}):filteredConcerts.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleExpanded(artist.name),style:{marginTop:'10px',backgroundColor:'#1DB954',color:'white',border:'none',padding:'6px 12px',borderRadius:'6px',cursor:'pointer'},children:expandedArtists[artist.name]?'Hide Concerts':'Show All Concerts'}),expandedArtists[artist.name]&&/*#__PURE__*/_jsx(\"ul\",{className:\"concert-list\",style:{marginTop:'10px'},children:filteredConcerts.map((event,i)=>{var _flightOffers$event$i;return/*#__PURE__*/_jsxs(\"li\",{className:\"concert-item\",style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"a\",{href:event.url,target:\"_blank\",rel:\"noopener noreferrer\",style:{color:'#1DB954',textDecoration:'underline'},children:event.name}),\" \\u2014 \",event.date,\" @ \",event.venue,/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'8px'},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:e=>{e.stopPropagation();if(!loadingFlights[event.id]){fetchFlightsForEvent(event);}},disabled:loadingFlights[event.id],style:{backgroundColor:loadingFlights[event.id]?'#555':'#0070f3',color:'white',border:'none',padding:'5px 10px',borderRadius:'5px',cursor:loadingFlights[event.id]?'not-allowed':'pointer',fontSize:'0.9rem'},children:loadingFlights[event.id]?'Loading Flights...':'Show Flights'})}),errorFlights[event.id]&&/*#__PURE__*/_jsxs(\"p\",{style:{color:'red'},children:[\"Error loading flights: \",errorFlights[event.id]]}),((_flightOffers$event$i=flightOffers[event.id])===null||_flightOffers$event$i===void 0?void 0:_flightOffers$event$i.length)>0&&/*#__PURE__*/_jsx(\"ul\",{style:{marginTop:'10px',paddingLeft:'20px'},children:flightOffers[event.id].map((flight,idx)=>{var _flight$itineraries,_flight$price;const itinerary=(_flight$itineraries=flight.itineraries)===null||_flight$itineraries===void 0?void 0:_flight$itineraries[0];if(!itinerary)return null;const segments=itinerary.segments||[];if(segments.length===0)return null;const firstSegment=segments[0];const lastSegment=segments[segments.length-1];const departureTime=firstSegment.departure.at;// ISO string\nconst arrivalTime=lastSegment.arrival.at;// ISO string\nconst durationMinutes=(new Date(arrivalTime)-new Date(departureTime))/(1000*60);const hours=Math.floor(durationMinutes/60);const minutes=Math.round(durationMinutes%60);const durationStr=`${hours}h ${minutes}m`;// Get unique carrier codes from segments\nconst airlineCodes=[...new Set(segments.map(seg=>seg.carrierCode))];// Map codes to full names (fall back to code if no name found)\nconst airlineNamesList=airlineCodes.map(code=>airlineNames[code]||code);// Combine into display string: \"American Airlines (AA), Delta Air Lines (DL)\"\nconst airlinesDisplay=airlineNamesList.map((name,i)=>`${name} (${airlineCodes[i]})`).join(', ');const bookingUrl=flight.bookingLink||null;return/*#__PURE__*/_jsxs(\"li\",{style:{fontSize:'0.9rem',marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Airline(s):\"}),\" \",airlinesDisplay,\" |\\xA0\",/*#__PURE__*/_jsx(\"strong\",{children:\"Price:\"}),\" $\",(_flight$price=flight.price)===null||_flight$price===void 0?void 0:_flight$price.total,\" |\\xA0\",/*#__PURE__*/_jsx(\"strong\",{children:\"Depart:\"}),\" \",formatWithTimezone(departureTime,event.state),\" (\",firstSegment.departure.iataCode,\") |\\xA0\",/*#__PURE__*/_jsx(\"strong\",{children:\"Arrive:\"}),\" \",formatWithTimezone(arrivalTime,event.state),\" (\",lastSegment.arrival.iataCode,\") |\\xA0\",/*#__PURE__*/_jsx(\"strong\",{children:\"Duration:\"}),\" \",durationStr,\" |\\xA0\",/*#__PURE__*/_jsx(\"strong\",{children:\"Stops:\"}),\" \",segments.length-1,bookingUrl&&/*#__PURE__*/_jsxs(_Fragment,{children:[\" | \",/*#__PURE__*/_jsx(\"a\",{href:bookingUrl,target:\"_blank\",rel:\"noopener noreferrer\",children:\"Book flight\"})]})]},idx);})})]},i);})})]}):/*#__PURE__*/_jsx(\"p\",{className:\"no-concerts\",children:\"No concerts found\"})]})]},index);})})]});};export default TopArtistsList;","map":{"version":3,"names":["React","useEffect","useState","DateTime","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","stateToAirports","airlineNames","formatWithTimezone","dateTimeStr","state","stateTimezones","timezone","fromISO","zone","setZone","toFormat","console","log","Object","keys","length","normalizeKey","str","toLowerCase","replace","normalizedStateToAirports","fromEntries","entries","map","_ref","airports","TopArtistsList","_ref2","topArtists","onShowRelatedArtists","onShowConcerts","concertData","setConcertData","expandedArtists","setExpandedArtists","loading","setLoading","error","setError","locationFilter","setLocationFilter","originAirport","setOriginAirport","daysBefore","setDaysBefore","daysAfter","setDaysAfter","flightOffers","setFlightOffers","loadingFlights","setLoadingFlights","errorFlights","setErrorFlights","toggleExpanded","artistName","prev","toTitleCase","trim","split","filter","Boolean","word","charAt","toUpperCase","slice","join","delay","ms","Promise","resolve","setTimeout","stateAbbrevToFull","AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","fetchConcerts","data","index","artist","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","url","encodeURIComponent","name","res","fetch","ok","text","Error","status","json","Array","isArray","events","message","fetchFlightsForEvent","event","date","country","id","alert","warn","normalizedState","normalizedCountry","lookupKeyState","lookupKeyCountry","destinationAirports","hasOwnProperty","eventDateObj","Date","startDate","setDate","getDate","endDate","formatDate","d","toISOString","departureDate","returnDate","allFlights","destination","_json$data","concat","allAirports","Set","values","flat","className","children","style","margin","textAlign","htmlFor","marginRight","value","onChange","e","target","padding","fontSize","borderRadius","code","type","min","Number","width","marginLeft","placeholder","border","color","_artist$images","_artist$images$","concerts","filteredConcerts","query","city","includes","venue","src","images","alt","popularity","onClick","marginTop","backgroundColor","cursor","i","_flightOffers$event$i","marginBottom","href","rel","textDecoration","stopPropagation","disabled","paddingLeft","flight","idx","_flight$itineraries","_flight$price","itinerary","itineraries","segments","firstSegment","lastSegment","departureTime","departure","at","arrivalTime","arrival","durationMinutes","hours","Math","floor","minutes","round","durationStr","airlineCodes","seg","carrierCode","airlineNamesList","airlinesDisplay","bookingUrl","bookingLink","price","total","iataCode"],"sources":["/Users/joyzhang/vibent/frontend/src/components/TopArtistsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './TopArtistsList.css';\nimport { DateTime } from \"luxon\";\n\n\nconst stateToAirports = {\n  \"Alabama\": [\"BHM\", \"HSV\", \"MGM\", \"MOB\"], // Birmingham, Huntsville, Montgomery, Mobile\n  \"Alaska\": [\"ANC\", \"FAI\", \"JNU\", \"SEA\"], // Anchorage, Fairbanks, Juneau, plus Seattle (common hub)\n  \"Arizona\": [\"PHX\", \"TUS\", \"SDL\"], // Phoenix, Tucson, Scottsdale (private/charter)\n  \"Arkansas\": [\"XNA\", \"LIT\", \"FSM\"], // Northwest Arkansas, Little Rock, Fort Smith\n  \"California\": [\"LAX\", \"SFO\", \"SAN\", \"SJC\", \"OAK\", \"SMF\", \"BUR\", \"ONT\", \"SNA\", \"LGB\"], // Major CA airports\n  \"Colorado\": [\"DEN\", \"COS\", \"GJT\"], // Denver, Colorado Springs, Grand Junction\n  \"Connecticut\": [\"BDL\", \"HVN\"], // Bradley (Hartford), Tweed New Haven\n  \"Delaware\": [\"ILG\"], // Wilmington (small, near Philadelphia)\n  \"District of Columbia\": [\"DCA\", \"IAD\", \"BWI\"], // Reagan, Dulles, Baltimore-Washington\n  \"Florida\": [\"MIA\", \"FLL\", \"TPA\", \"MCO\", \"RSW\", \"JAX\", \"PBI\"], // Miami, Fort Lauderdale, Tampa, Orlando, Southwest Florida, Jacksonville, Palm Beach\n  \"Georgia\": [\"ATL\", \"SAV\", \"AGS\", \"MCN\"], // Atlanta, Savannah, Augusta, Macon\n  \"Hawaii\": [\"HNL\", \"OGG\", \"KOA\", \"LIH\"], // Honolulu, Maui, Kona, Lihue\n  \"Idaho\": [\"BOI\", \"IDA\"], // Boise, Idaho Falls\n  \"Illinois\": [\"ORD\", \"MDW\", \"SPI\", \"RFD\"], // Oâ€™Hare, Midway, Springfield, Rockford\n  \"Indiana\": [\"IND\", \"SBN\"], // Indianapolis, South Bend\n  \"Iowa\": [\"DSM\", \"CID\", \"MLI\"], // Des Moines, Cedar Rapids, Moline\n  \"Kansas\": [\"ICT\", \"MCI\", \"FOE\"], // Wichita, Kansas City, Topeka\n  \"Kentucky\": [\"CVG\", \"SDF\", \"LEX\"], // Cincinnati/Northern KY, Louisville, Lexington\n  \"Louisiana\": [\"MSY\", \"BTR\", \"LFT\"], // New Orleans, Baton Rouge, Lafayette\n  \"Maine\": [\"PWM\", \"BGR\"], // Portland, Bangor\n  \"Maryland\": [\"BWI\", \"MTN\"], // Baltimore-Washington, Martin State\n  \"Massachusetts\": [\"BOS\", \"ORH\", \"EWB\"], // Boston Logan, Worcester, New Bedford\n  \"Michigan\": [\"DTW\", \"GRR\", \"MBS\", \"AZO\"], // Detroit, Grand Rapids, Saginaw, Kalamazoo\n  \"Minnesota\": [\"MSP\", \"DLH\", \"RST\"], // Minneapolis-St Paul, Duluth, Rochester\n  \"Mississippi\": [\"JAN\", \"GPT\"], // Jackson, Gulfport\n  \"Missouri\": [\"STL\", \"MCI\", \"SGF\"], // St. Louis, Kansas City, Springfield\n  \"Montana\": [\"BIL\", \"GTF\", \"MSO\"], // Billings, Great Falls, Missoula\n  \"Nebraska\": [\"OMA\", \"LNK\"], // Omaha, Lincoln\n  \"Nevada\": [\"LAS\", \"RNO\"], // Las Vegas, Reno\n  \"New Hampshire\": [\"MHT\", \"CON\"], // Manchester, Concord (small)\n  \"New Jersey\": [\"EWR\", \"ACY\", \"TTN\"], // Newark, Atlantic City, Trenton-Mercer\n  \"New Mexico\": [\"ABQ\", \"SRR\"], // Albuquerque, Santa Rosa (small)\n  \"New York\": [\"JFK\", \"LGA\", \"EWR\", \"BUF\", \"ROC\", \"SYR\", \"ALB\"], // JFK, LaGuardia, Newark, Buffalo, Rochester, Syracuse, Albany\n  \"North Carolina\": [\"CLT\", \"RDU\", \"GSO\", \"ILM\"], // Charlotte, Raleigh-Durham, Greensboro, Wilmington\n  \"North Dakota\": [\"FAR\", \"GFK\"], // Fargo, Grand Forks\n  \"Ohio\": [\"CLE\", \"CMH\", \"CVG\", \"DAY\"], // Cleveland, Columbus, Cincinnati, Dayton\n  \"Oklahoma\": [\"OKC\", \"TUL\"], // Oklahoma City, Tulsa\n  \"Oregon\": [\"PDX\", \"EUG\"], // Portland, Eugene\n  \"Pennsylvania\": [\"PHL\", \"PIT\", \"AVP\", \"MDT\"], // Philadelphia, Pittsburgh, Wilkes-Barre/Scranton, Harrisburg\n  \"Rhode Island\": [\"PVD\"], // Providence\n  \"South Carolina\": [\"CHS\", \"GSP\", \"CAE\"], // Charleston, Greenville-Spartanburg, Columbia\n  \"South Dakota\": [\"FSD\", \"RAP\"], // Sioux Falls, Rapid City\n  \"Tennessee\": [\"BNA\", \"MEM\", \"CHA\"], // Nashville, Memphis, Chattanooga\n  \"Texas\": [\"DFW\", \"IAH\", \"AUS\", \"SAT\", \"DAL\", \"HOU\"], // Dallas-Fort Worth, Houston, Austin, San Antonio, Dallas Love, Houston Hobby\n  \"Utah\": [\"SLC\", \"PVU\"], // Salt Lake City, Provo (small)\n  \"Vermont\": [\"BTV\"], // Burlington\n  \"Virginia\": [\"DCA\", \"ORF\", \"RIC\"], // Reagan, Norfolk, Richmond\n  \"Washington\": [\"SEA\", \"GEG\", \"PDX\"], // Seattle, Spokane, Portland (nearby)\n  \"West Virginia\": [\"CRW\", \"HTS\"], // Charleston, Huntington\n  \"Wisconsin\": [\"MKE\", \"MSN\", \"GRB\"], // Milwaukee, Madison, Green Bay\n  \"Wyoming\": [\"JAC\"], // Jackson Hole\n};\n\nconst airlineNames = {\n  \"6X\": \"Amadeus Six\",\n  \"PR\": \"Philippine Airlines\",\n  \"AA\": \"American Airlines\",\n  \"DL\": \"Delta Air Lines\",\n  \"UA\": \"United Airlines\",\n  \"WN\": \"Southwest Airlines\",\n  \"AS\": \"Alaska Airlines\",\n  \"B6\": \"JetBlue Airways\",\n  \"AF\": \"Air France\",\n  \"LH\": \"Lufthansa\",\n  \"EK\": \"Emirates\",\n  \"AC\": \"Air Canada\",\n  \"BA\": \"British Airways\",\n  \"CX\": \"Cathay Pacific\",\n  \"QF\": \"Qantas\",\n  \"SQ\": \"Singapore Airlines\",\n  \"JL\": \"Japan Airlines\",\n  \"NH\": \"All Nippon Airways\",\n  \"IB\": \"Iberia\",\n  \"AZ\": \"Alitalia\",\n  \"KL\": \"KLM Royal Dutch Airlines\",\n  \"TK\": \"Turkish Airlines\",\n  \"SA\": \"South African Airways\",\n  \"NZ\": \"Air New Zealand\",\n  \"EY\": \"Etihad Airways\",\n  \"QR\": \"Qatar Airways\",\n  \"MS\": \"EgyptAir\",\n  \"CX\": \"Cathay Pacific\",\n  \"FI\": \"Icelandair\",\n  \"DL\": \"Delta Air Lines\",\n  \"F9\": \"Frontier Airlines\",\n  \"G4\": \"Allegiant Air\",\n  \"HA\": \"Hawaiian Airlines\",\n  \"VX\": \"Virgin America\",\n  \"WN\": \"Southwest Airlines\",\n  \"YV\": \"Mesa Airlines\",\n};\n\nconst formatWithTimezone = (dateTimeStr, state) => {\n  const stateTimezones = {\n    \"Alabama\": \"America/Chicago\",\n    \"Alaska\": \"America/Anchorage\",\n    \"Arizona\": \"America/Phoenix\",\n    \"Arkansas\": \"America/Chicago\",\n    \"California\": \"America/Los_Angeles\",\n    \"Colorado\": \"America/Denver\",\n    \"Connecticut\": \"America/New_York\",\n    \"Delaware\": \"America/New_York\",\n    \"District of Columbia\": \"America/New_York\",\n    \"Florida\": \"America/New_York\", // see note below\n    \"Georgia\": \"America/New_York\",\n    \"Hawaii\": \"Pacific/Honolulu\",\n    \"Idaho\": \"America/Boise\", // mostly Mountain Time\n    \"Illinois\": \"America/Chicago\",\n    \"Indiana\": \"America/Indiana/Indianapolis\", // mostly Eastern\n    \"Iowa\": \"America/Chicago\",\n    \"Kansas\": \"America/Chicago\", // some parts Mountain Time, but mostly Chicago\n    \"Kentucky\": \"America/New_York\", // mostly Eastern\n    \"Louisiana\": \"America/Chicago\",\n    \"Maine\": \"America/New_York\",\n    \"Maryland\": \"America/New_York\",\n    \"Massachusetts\": \"America/New_York\",\n    \"Michigan\": \"America/Detroit\", // Eastern time\n    \"Minnesota\": \"America/Chicago\",\n    \"Mississippi\": \"America/Chicago\",\n    \"Missouri\": \"America/Chicago\",\n    \"Montana\": \"America/Denver\",\n    \"Nebraska\": \"America/Chicago\", // parts in Mountain Time, but mostly Chicago\n    \"Nevada\": \"America/Los_Angeles\", // parts in Mountain Time\n    \"New Hampshire\": \"America/New_York\",\n    \"New Jersey\": \"America/New_York\",\n    \"New Mexico\": \"America/Denver\",\n    \"New York\": \"America/New_York\",\n    \"North Carolina\": \"America/New_York\",\n    \"North Dakota\": \"America/Chicago\", // parts Mountain Time but mostly Chicago\n    \"Ohio\": \"America/New_York\",\n    \"Oklahoma\": \"America/Chicago\",\n    \"Oregon\": \"America/Los_Angeles\", // some parts in Mountain Time\n    \"Pennsylvania\": \"America/New_York\",\n    \"Rhode Island\": \"America/New_York\",\n    \"South Carolina\": \"America/New_York\",\n    \"South Dakota\": \"America/Chicago\", // parts Mountain Time but mostly Chicago\n    \"Tennessee\": \"America/Chicago\", // mostly Central Time (East Tennessee is Eastern)\n    \"Texas\": \"America/Chicago\", // mostly Central, but West Texas is Mountain Time\n    \"Utah\": \"America/Denver\",\n    \"Vermont\": \"America/New_York\",\n    \"Virginia\": \"America/New_York\",\n    \"Washington\": \"America/Los_Angeles\",\n    \"West Virginia\": \"America/New_York\",\n    \"Wisconsin\": \"America/Chicago\",\n    \"Wyoming\": \"America/Denver\"\n  };\n\n  const timezone = stateTimezones[state] || \"UTC\";\n  return DateTime.fromISO(dateTimeStr, { zone: \"utc\" })\n    .setZone(timezone)\n    .toFormat(\"MMM dd, yyyy hh:mm a ZZZZ\");\n};\n\n\n\n\nconsole.log('Raw stateToAirports:', stateToAirports);\nconsole.log('Is empty?', Object.keys(stateToAirports).length === 0);\n\nconst normalizeKey = str => str.toLowerCase().replace(/\\s+/g, '');\n\nconst normalizedStateToAirports = Object.fromEntries(\n  Object.entries(stateToAirports).map(([state, airports]) => [normalizeKey(state), airports])\n);\n\nconsole.log('Normalized keys:', Object.keys(normalizedStateToAirports));\n\n\n\nconst TopArtistsList = ({ topArtists, onShowRelatedArtists, onShowConcerts }) => {\n  const [concertData, setConcertData] = useState({});\n  const [expandedArtists, setExpandedArtists] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [locationFilter, setLocationFilter] = useState('');\n  const [originAirport, setOriginAirport] = useState('SFO');\n\n  // NEW: flexible arrival/departure days\n  const [daysBefore, setDaysBefore] = useState(1);\n  const [daysAfter, setDaysAfter] = useState(1);\n\n  const [flightOffers, setFlightOffers] = useState({});\n  const [loadingFlights, setLoadingFlights] = useState({});\n  const [errorFlights, setErrorFlights] = useState({});\n\n  const toggleExpanded = (artistName) => {\n    setExpandedArtists(prev => ({\n      ...prev,\n      [artistName]: !prev[artistName]\n    }));\n  };\n\n  const toTitleCase = (str) => {\n    if (!str) return '';\n    return str\n      .trim()\n      .toLowerCase()\n      .split(' ')\n      .filter(Boolean)\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  };\n\n  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  const stateAbbrevToFull = {\n    AL: \"Alabama\", AK: \"Alaska\", AZ: \"Arizona\", AR: \"Arkansas\",\n    CA: \"California\", CO: \"Colorado\", CT: \"Connecticut\", DE: \"Delaware\",\n    DC: \"District of Columbia\", FL: \"Florida\", GA: \"Georgia\", HI: \"Hawaii\",\n    ID: \"Idaho\", IL: \"Illinois\", IN: \"Indiana\", IA: \"Iowa\",\n    KS: \"Kansas\", KY: \"Kentucky\", LA: \"Louisiana\", ME: \"Maine\",\n    MD: \"Maryland\", MA: \"Massachusetts\", MI: \"Michigan\", MN: \"Minnesota\",\n    MS: \"Mississippi\", MO: \"Missouri\", MT: \"Montana\", NE: \"Nebraska\",\n    NV: \"Nevada\", NH: \"New Hampshire\", NJ: \"New Jersey\", NM: \"New Mexico\",\n    NY: \"New York\", NC: \"North Carolina\", ND: \"North Dakota\", OH: \"Ohio\",\n    OK: \"Oklahoma\", OR: \"Oregon\", PA: \"Pennsylvania\", RI: \"Rhode Island\",\n    SC: \"South Carolina\", SD: \"South Dakota\", TN: \"Tennessee\", TX: \"Texas\",\n    UT: \"Utah\", VT: \"Vermont\", VA: \"Virginia\", WA: \"Washington\",\n    WV: \"West Virginia\", WI: \"Wisconsin\", WY: \"Wyoming\"\n  };\n\n\n\n  useEffect(() => {\n    const fetchConcerts = async () => {\n      setLoading(true);\n      setError(null);\n      const data = {};\n\n      for (const [index, artist] of topArtists.entries()) {\n        try {\n          if (index > 0) {\n            await delay(300);\n          }\n\n          const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'https://vibent-api.onrender.com';\n          const url = `${BACKEND_URL}/concerts?artistName=${encodeURIComponent(artist.name)}`;\n          const res = await fetch(url);\n\n          if (!res.ok) {\n            const text = await res.text();\n            throw new Error(`API returned ${res.status}: ${text}`);\n          }\n\n          const json = await res.json();\n          data[artist.name] = Array.isArray(json.events) ? json.events : [];\n        } catch (error) {\n          data[artist.name] = [];\n          console.error(`Concert fetch error for ${artist.name}:`, error);\n          setError(error.message);\n        }\n      }\n\n      setConcertData(data);\n      setLoading(false);\n    };\n\n    if (topArtists.length > 0) {\n      fetchConcerts();\n    }\n  }, [topArtists]);\n\n  const fetchFlightsForEvent = async (event) => {\n    const { state, date, country, id } = event;\n    const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'https://vibent-api.onrender.com';\n  \n    console.log('Show flights clicked for event ID:', id);\n    console.log('Show flights clicked for event:', event);\n  \n    if (!date) {\n      alert('Missing concert date to fetch flights.');\n      return;\n    }\n  \n    if (!id) {\n      console.warn('Event missing unique id:', event);\n      alert('Cannot fetch flights: event ID missing.');\n      return;\n    }\n  \n    // Normalize and map state abbrev to full state name first\n    let normalizedState = '';\n    if (state) {\n      if (state.length === 2) {\n        normalizedState = stateAbbrevToFull[state.toUpperCase()] || state;\n      } else {\n        normalizedState = toTitleCase(state.trim());\n      }\n    }\n  \n    const normalizedCountry = country ? toTitleCase(country.trim()) : '';\n  \n    console.log('Normalized State:', normalizedState);\n    console.log('Normalized Country:', normalizedCountry);\n  \n    const lookupKeyState = normalizeKey(normalizedState);\n    const lookupKeyCountry = normalizeKey(normalizedCountry);\n  \n    console.log('Lookup Key State:', lookupKeyState);\n    console.log('Lookup Key Country:', lookupKeyCountry);\n  \n    // Strictly check if keys exist in mapping before using them\n    let destinationAirports = [];\n    if (lookupKeyState && normalizedStateToAirports.hasOwnProperty(lookupKeyState)) {\n      destinationAirports = normalizedStateToAirports[lookupKeyState];\n      console.log('Using airports from state:', normalizedState, destinationAirports);\n    } else if (lookupKeyCountry && normalizedStateToAirports.hasOwnProperty(lookupKeyCountry)) {\n      destinationAirports = normalizedStateToAirports[lookupKeyCountry];\n      console.log('Using airports from country:', normalizedCountry, destinationAirports);\n    } else {\n      console.warn('No airports found for:', normalizedState || normalizedCountry);\n      alert(`No airport codes found for ${state || country}.`);\n      return;\n    }\n  \n    if (!destinationAirports || destinationAirports.length === 0) {\n      alert(`No airport codes found for ${state || country}.`);\n      return;\n    }\n  \n    // Compute flexible date range\n    const eventDateObj = new Date(date);\n    const startDate = new Date(eventDateObj);\n    startDate.setDate(startDate.getDate() - daysBefore);\n    const endDate = new Date(eventDateObj);\n    endDate.setDate(endDate.getDate() + daysAfter);\n  \n    const formatDate = d => d.toISOString().split('T')[0];\n    const departureDate = formatDate(startDate);\n    const returnDate = formatDate(endDate);\n  \n    console.log('Fetching flights for all destination airports:', destinationAirports);\n  \n    setLoadingFlights(prev => ({ ...prev, [id]: true }));\n    setErrorFlights(prev => ({ ...prev, [id]: null }));\n  \n    try {\n      let allFlights = [];\n  \n      // Sequential fetch per destination airport to avoid rate limits / API overload\n      for (const destination of destinationAirports) {\n        const url = `${BACKEND_URL}/flights?origin=${originAirport}&destination=${destination}&departureDate=${departureDate}&returnDate=${returnDate}`;\n        console.log('Fetching flights from:', originAirport, 'to:', destination);\n        const res = await fetch(url);\n  \n        if (!res.ok) {\n          const text = await res.text();\n          throw new Error(`Flights API returned ${res.status} for destination ${destination}: ${text}`);\n        }\n  \n        const json = await res.json();\n  \n        if (json.data?.length > 0) {\n          allFlights = allFlights.concat(json.data);\n        }\n  \n        // Optional: small delay between requests to avoid hammering API\n        await delay(100);\n      }\n  \n      // Optional: deduplicate flights if needed (by some unique id)\n      // For now, just setting all combined flights\n      setFlightOffers(prev => ({\n        ...prev,\n        [id]: allFlights\n      }));\n    } catch (error) {\n      console.error(`Error fetching flights for event ${id}:`, error);\n      setErrorFlights(prev => ({ ...prev, [id]: error.message }));\n      setFlightOffers(prev => ({ ...prev, [id]: [] }));\n    } finally {\n      setLoadingFlights(prev => ({ ...prev, [id]: false }));\n    }\n  };  \n  \n  // Flatten and deduplicate airport codes for origin airport dropdown\n  const allAirports = [...new Set(Object.values(stateToAirports).flat())];\n\n  return (\n    <div className=\"top-artists-container\">\n      <h1 className=\"title\">Your Top Spotify Artists</h1>\n\n      {/* Origin Airport Selector */}\n      <div style={{ margin: '20px 0', textAlign: 'center' }}>\n        <label htmlFor=\"originAirport\" style={{ marginRight: '10px' }}>\n          Select your home airport:\n        </label>\n        <select\n          id=\"originAirport\"\n          value={originAirport}\n          onChange={(e) => setOriginAirport(e.target.value)}\n          style={{ padding: '8px', fontSize: '1rem', borderRadius: '6px' }}\n        >\n          {allAirports.map((code) => (\n            <option key={code} value={code}>\n              {code}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Flexible Date Inputs */}\n      <div style={{ margin: '10px 0', textAlign: 'center' }}>\n        <label>\n          Arrive up to{' '}\n          <input\n            type=\"number\"\n            min=\"0\"\n            value={daysBefore}\n            onChange={(e) => setDaysBefore(Number(e.target.value))}\n            style={{ width: '40px', margin: '0 5px' }}\n          />{' '}\n          day(s) before\n        </label>\n        <label style={{ marginLeft: '15px' }}>\n          Leave up to{' '}\n          <input\n            type=\"number\"\n            min=\"0\"\n            value={daysAfter}\n            onChange={(e) => setDaysAfter(Number(e.target.value))}\n            style={{ width: '40px', margin: '0 5px' }}\n          />{' '}\n          day(s) after\n        </label>\n      </div>\n\n      {/* Location Filter */}\n      <div style={{ margin: '20px 0', textAlign: 'center' }}>\n        <input\n          type=\"text\"\n          placeholder=\"Filter by City or State (e.g. New York)\"\n          value={locationFilter}\n          onChange={(e) => setLocationFilter(e.target.value)}\n          style={{\n            padding: '10px',\n            fontSize: '1rem',\n            borderRadius: '8px',\n            border: '1px solid #ccc',\n            width: '250px'\n          }}\n        />\n      </div>\n\n      {error && (\n        <div className=\"error-message\" style={{ color: 'red', margin: '10px 0' }}>\n          Error loading concerts: {error}\n        </div>\n      )}\n\n      <ul className=\"artist-list\">\n        {topArtists.map((artist, index) => {\n          const concerts = concertData[artist.name] || [];\n\n          const filteredConcerts = concerts.filter(event => {\n            const query = locationFilter.toLowerCase();\n            return (\n              !locationFilter ||\n              (event.city && event.city.toLowerCase().includes(query)) ||\n              (event.state && event.state.toLowerCase().includes(query)) ||\n              (event.country && event.country.toLowerCase().includes(query)) ||\n              (event.venue && event.venue.toLowerCase().includes(query)) ||\n              (event.name && event.name.toLowerCase().includes(query))\n            );\n          });\n\n          return (\n            <li key={index} className=\"artist-card\">\n              <img\n                src={artist.images?.[0]?.url}\n                alt={artist.name}\n                className=\"artist-img\"\n              />\n              <div>\n                <h3 className=\"artist-name\">{artist.name}</h3>\n                <p className=\"artist-popularity\">Popularity: {artist.popularity}</p>\n\n                {/* Concerts */}\n                {loading ? (\n                  <p className=\"loading-concerts\">Loading concerts...</p>\n                ) : filteredConcerts.length > 0 ? (\n                  <>\n                    <button\n                      onClick={() => toggleExpanded(artist.name)}\n                      style={{\n                        marginTop: '10px',\n                        backgroundColor: '#1DB954',\n                        color: 'white',\n                        border: 'none',\n                        padding: '6px 12px',\n                        borderRadius: '6px',\n                        cursor: 'pointer'\n                      }}\n                    >\n                      {expandedArtists[artist.name] ? 'Hide Concerts' : 'Show All Concerts'}\n                    </button>\n\n                    {expandedArtists[artist.name] && (\n                      <ul className=\"concert-list\" style={{ marginTop: '10px' }}>\n                        {filteredConcerts.map((event, i) => (\n                          <li key={i} className=\"concert-item\" style={{ marginBottom: '20px' }}>\n                            <a\n                              href={event.url}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              style={{ color: '#1DB954', textDecoration: 'underline' }}\n                            >\n                              {event.name}\n                            </a> â€” {event.date} @ {event.venue}\n\n                            {/* Show Flights */}\n                            <div style={{ marginTop: '8px' }}>\n                              <button\n                                type=\"button\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  if (!loadingFlights[event.id]) {\n                                    fetchFlightsForEvent(event);\n                                  }\n                                }}\n                                disabled={loadingFlights[event.id]}\n                                style={{\n                                  backgroundColor: loadingFlights[event.id] ? '#555' : '#0070f3',\n                                  color: 'white',\n                                  border: 'none',\n                                  padding: '5px 10px',\n                                  borderRadius: '5px',\n                                  cursor: loadingFlights[event.id] ? 'not-allowed' : 'pointer',\n                                  fontSize: '0.9rem'\n                                }}\n                              >\n                                {loadingFlights[event.id] ? 'Loading Flights...' : 'Show Flights'}\n                              </button>\n                            </div>\n\n                            {errorFlights[event.id] && (\n                              <p style={{ color: 'red' }}>Error loading flights: {errorFlights[event.id]}</p>\n                            )}\n\n                              {flightOffers[event.id]?.length > 0 && (\n                                <ul style={{ marginTop: '10px', paddingLeft: '20px' }}>\n                                  {flightOffers[event.id].map((flight, idx) => {\n                                    const itinerary = flight.itineraries?.[0];\n                                    if (!itinerary) return null;\n\n                                    const segments = itinerary.segments || [];\n                                    if (segments.length === 0) return null;\n\n                                    const firstSegment = segments[0];\n                                    const lastSegment = segments[segments.length - 1];\n\n                                    const departureTime = firstSegment.departure.at; // ISO string\n                                    const arrivalTime = lastSegment.arrival.at;     // ISO string\n\n                                    const durationMinutes =\n                                      (new Date(arrivalTime) - new Date(departureTime)) / (1000 * 60);\n                                    const hours = Math.floor(durationMinutes / 60);\n                                    const minutes = Math.round(durationMinutes % 60);\n                                    const durationStr = `${hours}h ${minutes}m`;\n\n                                    // Get unique carrier codes from segments\n                                    const airlineCodes = [...new Set(segments.map(seg => seg.carrierCode))];\n\n                                    // Map codes to full names (fall back to code if no name found)\n                                    const airlineNamesList = airlineCodes.map(code => airlineNames[code] || code);\n\n                                    // Combine into display string: \"American Airlines (AA), Delta Air Lines (DL)\"\n                                    const airlinesDisplay = airlineNamesList\n                                      .map((name, i) => `${name} (${airlineCodes[i]})`)\n                                      .join(', ');\n\n                                    const bookingUrl = flight.bookingLink || null;\n\n                                    return (\n                                      <li key={idx} style={{ fontSize: '0.9rem', marginBottom: '8px' }}>\n                                        <strong>Airline(s):</strong> {airlinesDisplay} |&nbsp;\n                                        <strong>Price:</strong> ${flight.price?.total} |&nbsp;\n                                        <strong>Depart:</strong> {formatWithTimezone(departureTime, event.state)} ({firstSegment.departure.iataCode}) |&nbsp;\n                                        <strong>Arrive:</strong> {formatWithTimezone(arrivalTime, event.state)} ({lastSegment.arrival.iataCode}) |&nbsp;\n                                        <strong>Duration:</strong> {durationStr} |&nbsp;\n                                        <strong>Stops:</strong> {segments.length - 1}\n                                        {bookingUrl && (\n                                          <> | <a href={bookingUrl} target=\"_blank\" rel=\"noopener noreferrer\">Book flight</a></>\n                                        )}\n                                      </li>\n                                    );\n                                  })}\n                                </ul>\n                              )}\n                          </li>\n                        ))}\n                      </ul>\n                    )}\n                  </>\n                ) : (\n                  <p className=\"no-concerts\">No concerts found</p>\n                )}\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TopArtistsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}