{"ast":null,"code":"var _jsxFileName = \"/Users/joyzhang/vibent/frontend/src/components/TopArtistsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './TopArtistsList.css';\nimport { DateTime } from \"luxon\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst stateToAirports = {\n  \"Alabama\": [\"BHM\", \"HSV\", \"MGM\", \"MOB\"],\n  // Birmingham, Huntsville, Montgomery, Mobile\n  \"Alaska\": [\"ANC\", \"FAI\", \"JNU\", \"SEA\"],\n  // Anchorage, Fairbanks, Juneau, plus Seattle (common hub)\n  \"Arizona\": [\"PHX\", \"TUS\", \"SDL\"],\n  // Phoenix, Tucson, Scottsdale (private/charter)\n  \"Arkansas\": [\"XNA\", \"LIT\", \"FSM\"],\n  // Northwest Arkansas, Little Rock, Fort Smith\n  \"California\": [\"LAX\", \"SFO\", \"SAN\", \"SJC\", \"OAK\", \"SMF\", \"BUR\", \"ONT\", \"SNA\", \"LGB\"],\n  // Major CA airports\n  \"Colorado\": [\"DEN\", \"COS\", \"GJT\"],\n  // Denver, Colorado Springs, Grand Junction\n  \"Connecticut\": [\"BDL\", \"HVN\"],\n  // Bradley (Hartford), Tweed New Haven\n  \"Delaware\": [\"ILG\"],\n  // Wilmington (small, near Philadelphia)\n  \"District of Columbia\": [\"DCA\", \"IAD\", \"BWI\"],\n  // Reagan, Dulles, Baltimore-Washington\n  \"Florida\": [\"MIA\", \"FLL\", \"TPA\", \"MCO\", \"RSW\", \"JAX\", \"PBI\"],\n  // Miami, Fort Lauderdale, Tampa, Orlando, Southwest Florida, Jacksonville, Palm Beach\n  \"Georgia\": [\"ATL\", \"SAV\", \"AGS\", \"MCN\"],\n  // Atlanta, Savannah, Augusta, Macon\n  \"Hawaii\": [\"HNL\", \"OGG\", \"KOA\", \"LIH\"],\n  // Honolulu, Maui, Kona, Lihue\n  \"Idaho\": [\"BOI\", \"IDA\"],\n  // Boise, Idaho Falls\n  \"Illinois\": [\"ORD\", \"MDW\", \"SPI\", \"RFD\"],\n  // Oâ€™Hare, Midway, Springfield, Rockford\n  \"Indiana\": [\"IND\", \"SBN\"],\n  // Indianapolis, South Bend\n  \"Iowa\": [\"DSM\", \"CID\", \"MLI\"],\n  // Des Moines, Cedar Rapids, Moline\n  \"Kansas\": [\"ICT\", \"MCI\", \"FOE\"],\n  // Wichita, Kansas City, Topeka\n  \"Kentucky\": [\"CVG\", \"SDF\", \"LEX\"],\n  // Cincinnati/Northern KY, Louisville, Lexington\n  \"Louisiana\": [\"MSY\", \"BTR\", \"LFT\"],\n  // New Orleans, Baton Rouge, Lafayette\n  \"Maine\": [\"PWM\", \"BGR\"],\n  // Portland, Bangor\n  \"Maryland\": [\"BWI\", \"MTN\"],\n  // Baltimore-Washington, Martin State\n  \"Massachusetts\": [\"BOS\", \"ORH\", \"EWB\"],\n  // Boston Logan, Worcester, New Bedford\n  \"Michigan\": [\"DTW\", \"GRR\", \"MBS\", \"AZO\"],\n  // Detroit, Grand Rapids, Saginaw, Kalamazoo\n  \"Minnesota\": [\"MSP\", \"DLH\", \"RST\"],\n  // Minneapolis-St Paul, Duluth, Rochester\n  \"Mississippi\": [\"JAN\", \"GPT\"],\n  // Jackson, Gulfport\n  \"Missouri\": [\"STL\", \"MCI\", \"SGF\"],\n  // St. Louis, Kansas City, Springfield\n  \"Montana\": [\"BIL\", \"GTF\", \"MSO\"],\n  // Billings, Great Falls, Missoula\n  \"Nebraska\": [\"OMA\", \"LNK\"],\n  // Omaha, Lincoln\n  \"Nevada\": [\"LAS\", \"RNO\"],\n  // Las Vegas, Reno\n  \"New Hampshire\": [\"MHT\", \"CON\"],\n  // Manchester, Concord (small)\n  \"New Jersey\": [\"EWR\", \"ACY\", \"TTN\"],\n  // Newark, Atlantic City, Trenton-Mercer\n  \"New Mexico\": [\"ABQ\", \"SRR\"],\n  // Albuquerque, Santa Rosa (small)\n  \"New York\": [\"JFK\", \"LGA\", \"EWR\", \"BUF\", \"ROC\", \"SYR\", \"ALB\"],\n  // JFK, LaGuardia, Newark, Buffalo, Rochester, Syracuse, Albany\n  \"North Carolina\": [\"CLT\", \"RDU\", \"GSO\", \"ILM\"],\n  // Charlotte, Raleigh-Durham, Greensboro, Wilmington\n  \"North Dakota\": [\"FAR\", \"GFK\"],\n  // Fargo, Grand Forks\n  \"Ohio\": [\"CLE\", \"CMH\", \"CVG\", \"DAY\"],\n  // Cleveland, Columbus, Cincinnati, Dayton\n  \"Oklahoma\": [\"OKC\", \"TUL\"],\n  // Oklahoma City, Tulsa\n  \"Oregon\": [\"PDX\", \"EUG\"],\n  // Portland, Eugene\n  \"Pennsylvania\": [\"PHL\", \"PIT\", \"AVP\", \"MDT\"],\n  // Philadelphia, Pittsburgh, Wilkes-Barre/Scranton, Harrisburg\n  \"Rhode Island\": [\"PVD\"],\n  // Providence\n  \"South Carolina\": [\"CHS\", \"GSP\", \"CAE\"],\n  // Charleston, Greenville-Spartanburg, Columbia\n  \"South Dakota\": [\"FSD\", \"RAP\"],\n  // Sioux Falls, Rapid City\n  \"Tennessee\": [\"BNA\", \"MEM\", \"CHA\"],\n  // Nashville, Memphis, Chattanooga\n  \"Texas\": [\"DFW\", \"IAH\", \"AUS\", \"SAT\", \"DAL\", \"HOU\"],\n  // Dallas-Fort Worth, Houston, Austin, San Antonio, Dallas Love, Houston Hobby\n  \"Utah\": [\"SLC\", \"PVU\"],\n  // Salt Lake City, Provo (small)\n  \"Vermont\": [\"BTV\"],\n  // Burlington\n  \"Virginia\": [\"DCA\", \"ORF\", \"RIC\"],\n  // Reagan, Norfolk, Richmond\n  \"Washington\": [\"SEA\", \"GEG\", \"PDX\"],\n  // Seattle, Spokane, Portland (nearby)\n  \"West Virginia\": [\"CRW\", \"HTS\"],\n  // Charleston, Huntington\n  \"Wisconsin\": [\"MKE\", \"MSN\", \"GRB\"],\n  // Milwaukee, Madison, Green Bay\n  \"Wyoming\": [\"JAC\"] // Jackson Hole\n};\nconst airlineNames = {\n  \"6X\": \"Amadeus Six\",\n  \"PR\": \"Philippine Airlines\",\n  \"AA\": \"American Airlines\",\n  \"DL\": \"Delta Air Lines\",\n  \"UA\": \"United Airlines\",\n  \"WN\": \"Southwest Airlines\",\n  \"AS\": \"Alaska Airlines\",\n  \"B6\": \"JetBlue Airways\",\n  \"AF\": \"Air France\",\n  \"LH\": \"Lufthansa\",\n  \"EK\": \"Emirates\",\n  \"AC\": \"Air Canada\",\n  \"BA\": \"British Airways\",\n  \"CX\": \"Cathay Pacific\",\n  \"QF\": \"Qantas\",\n  \"SQ\": \"Singapore Airlines\",\n  \"JL\": \"Japan Airlines\",\n  \"NH\": \"All Nippon Airways\",\n  \"IB\": \"Iberia\",\n  \"AZ\": \"Alitalia\",\n  \"KL\": \"KLM Royal Dutch Airlines\",\n  \"TK\": \"Turkish Airlines\",\n  \"SA\": \"South African Airways\",\n  \"NZ\": \"Air New Zealand\",\n  \"EY\": \"Etihad Airways\",\n  \"QR\": \"Qatar Airways\",\n  \"MS\": \"EgyptAir\",\n  \"CX\": \"Cathay Pacific\",\n  \"FI\": \"Icelandair\",\n  \"DL\": \"Delta Air Lines\",\n  \"F9\": \"Frontier Airlines\",\n  \"G4\": \"Allegiant Air\",\n  \"HA\": \"Hawaiian Airlines\",\n  \"VX\": \"Virgin America\",\n  \"WN\": \"Southwest Airlines\",\n  \"YV\": \"Mesa Airlines\"\n};\nconst formatWithTimezone = (dateTimeStr, state) => {\n  const stateTimezones = {\n    \"Alabama\": \"America/Chicago\",\n    \"Alaska\": \"America/Anchorage\",\n    \"Arizona\": \"America/Phoenix\",\n    \"Arkansas\": \"America/Chicago\",\n    \"California\": \"America/Los_Angeles\",\n    \"Colorado\": \"America/Denver\",\n    \"Connecticut\": \"America/New_York\",\n    \"Delaware\": \"America/New_York\",\n    \"District of Columbia\": \"America/New_York\",\n    \"Florida\": \"America/New_York\",\n    // see note below\n    \"Georgia\": \"America/New_York\",\n    \"Hawaii\": \"Pacific/Honolulu\",\n    \"Idaho\": \"America/Boise\",\n    // mostly Mountain Time\n    \"Illinois\": \"America/Chicago\",\n    \"Indiana\": \"America/Indiana/Indianapolis\",\n    // mostly Eastern\n    \"Iowa\": \"America/Chicago\",\n    \"Kansas\": \"America/Chicago\",\n    // some parts Mountain Time, but mostly Chicago\n    \"Kentucky\": \"America/New_York\",\n    // mostly Eastern\n    \"Louisiana\": \"America/Chicago\",\n    \"Maine\": \"America/New_York\",\n    \"Maryland\": \"America/New_York\",\n    \"Massachusetts\": \"America/New_York\",\n    \"Michigan\": \"America/Detroit\",\n    // Eastern time\n    \"Minnesota\": \"America/Chicago\",\n    \"Mississippi\": \"America/Chicago\",\n    \"Missouri\": \"America/Chicago\",\n    \"Montana\": \"America/Denver\",\n    \"Nebraska\": \"America/Chicago\",\n    // parts in Mountain Time, but mostly Chicago\n    \"Nevada\": \"America/Los_Angeles\",\n    // parts in Mountain Time\n    \"New Hampshire\": \"America/New_York\",\n    \"New Jersey\": \"America/New_York\",\n    \"New Mexico\": \"America/Denver\",\n    \"New York\": \"America/New_York\",\n    \"North Carolina\": \"America/New_York\",\n    \"North Dakota\": \"America/Chicago\",\n    // parts Mountain Time but mostly Chicago\n    \"Ohio\": \"America/New_York\",\n    \"Oklahoma\": \"America/Chicago\",\n    \"Oregon\": \"America/Los_Angeles\",\n    // some parts in Mountain Time\n    \"Pennsylvania\": \"America/New_York\",\n    \"Rhode Island\": \"America/New_York\",\n    \"South Carolina\": \"America/New_York\",\n    \"South Dakota\": \"America/Chicago\",\n    // parts Mountain Time but mostly Chicago\n    \"Tennessee\": \"America/Chicago\",\n    // mostly Central Time (East Tennessee is Eastern)\n    \"Texas\": \"America/Chicago\",\n    // mostly Central, but West Texas is Mountain Time\n    \"Utah\": \"America/Denver\",\n    \"Vermont\": \"America/New_York\",\n    \"Virginia\": \"America/New_York\",\n    \"Washington\": \"America/Los_Angeles\",\n    \"West Virginia\": \"America/New_York\",\n    \"Wisconsin\": \"America/Chicago\",\n    \"Wyoming\": \"America/Denver\"\n  };\n  const timezone = stateTimezones[state] || \"UTC\";\n  return DateTime.fromISO(dateTimeStr, {\n    zone: \"utc\"\n  }).setZone(timezone).toFormat(\"MMM dd, yyyy hh:mm a ZZZZ\");\n};\n\n// Note: States like Florida, Tennessee, Texas, South Dakota, Oregon, North Dakota, Kansas, Nebraska have multiple time zones.\n// You could refine this by checking city/airport location or simply default to main time zone.\n\nconsole.log('Raw stateToAirports:', stateToAirports);\nconsole.log('Is empty?', Object.keys(stateToAirports).length === 0);\nconst normalizeKey = str => str.toLowerCase().replace(/\\s+/g, '');\nconst normalizedStateToAirports = Object.fromEntries(Object.entries(stateToAirports).map(([state, airports]) => [normalizeKey(state), airports]));\nconsole.log('Normalized keys:', Object.keys(normalizedStateToAirports));\nconst TopArtistsList = ({\n  topArtists,\n  onShowRelatedArtists,\n  onShowConcerts\n}) => {\n  _s();\n  const [concertData, setConcertData] = useState({});\n  const [expandedArtists, setExpandedArtists] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [locationFilter, setLocationFilter] = useState('');\n  const [originAirport, setOriginAirport] = useState('SFO');\n\n  // NEW: flexible arrival/departure days\n  const [daysBefore, setDaysBefore] = useState(1);\n  const [daysAfter, setDaysAfter] = useState(1);\n  const [flightOffers, setFlightOffers] = useState({});\n  const [loadingFlights, setLoadingFlights] = useState({});\n  const [errorFlights, setErrorFlights] = useState({});\n  const toggleExpanded = artistName => {\n    setExpandedArtists(prev => ({\n      ...prev,\n      [artistName]: !prev[artistName]\n    }));\n  };\n  const toTitleCase = str => {\n    if (!str) return '';\n    return str.trim().toLowerCase().split(' ').filter(Boolean).map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n  const stateAbbrevToFull = {\n    AL: \"Alabama\",\n    AK: \"Alaska\",\n    AZ: \"Arizona\",\n    AR: \"Arkansas\",\n    CA: \"California\",\n    CO: \"Colorado\",\n    CT: \"Connecticut\",\n    DE: \"Delaware\",\n    DC: \"District of Columbia\",\n    FL: \"Florida\",\n    GA: \"Georgia\",\n    HI: \"Hawaii\",\n    ID: \"Idaho\",\n    IL: \"Illinois\",\n    IN: \"Indiana\",\n    IA: \"Iowa\",\n    KS: \"Kansas\",\n    KY: \"Kentucky\",\n    LA: \"Louisiana\",\n    ME: \"Maine\",\n    MD: \"Maryland\",\n    MA: \"Massachusetts\",\n    MI: \"Michigan\",\n    MN: \"Minnesota\",\n    MS: \"Mississippi\",\n    MO: \"Missouri\",\n    MT: \"Montana\",\n    NE: \"Nebraska\",\n    NV: \"Nevada\",\n    NH: \"New Hampshire\",\n    NJ: \"New Jersey\",\n    NM: \"New Mexico\",\n    NY: \"New York\",\n    NC: \"North Carolina\",\n    ND: \"North Dakota\",\n    OH: \"Ohio\",\n    OK: \"Oklahoma\",\n    OR: \"Oregon\",\n    PA: \"Pennsylvania\",\n    RI: \"Rhode Island\",\n    SC: \"South Carolina\",\n    SD: \"South Dakota\",\n    TN: \"Tennessee\",\n    TX: \"Texas\",\n    UT: \"Utah\",\n    VT: \"Vermont\",\n    VA: \"Virginia\",\n    WA: \"Washington\",\n    WV: \"West Virginia\",\n    WI: \"Wisconsin\",\n    WY: \"Wyoming\"\n  };\n  const formatWithTimezone = (dateObj, state) => {\n    const fullState = stateAbbrevToFull[state === null || state === void 0 ? void 0 : state.toUpperCase()] || state || \"\";\n    const tz = stateToTimezone[fullState.replace(/\\s/g, \"_\")] || \"UTC\";\n    try {\n      return new Intl.DateTimeFormat(\"en-US\", {\n        timeZone: tz,\n        weekday: \"short\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }).format(dateObj);\n    } catch (err) {\n      console.warn(\"Timezone format error:\", err);\n      return dateObj.toLocaleString(); // fallback\n    }\n  };\n  useEffect(() => {\n    const fetchConcerts = async () => {\n      setLoading(true);\n      setError(null);\n      const data = {};\n      for (const [index, artist] of topArtists.entries()) {\n        try {\n          if (index > 0) {\n            await delay(300);\n          }\n          const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'https://vibent-api.onrender.com';\n          const url = `${BACKEND_URL}/concerts?artistName=${encodeURIComponent(artist.name)}`;\n          const res = await fetch(url);\n          if (!res.ok) {\n            const text = await res.text();\n            throw new Error(`API returned ${res.status}: ${text}`);\n          }\n          const json = await res.json();\n          data[artist.name] = Array.isArray(json.events) ? json.events : [];\n        } catch (error) {\n          data[artist.name] = [];\n          console.error(`Concert fetch error for ${artist.name}:`, error);\n          setError(error.message);\n        }\n      }\n      setConcertData(data);\n      setLoading(false);\n    };\n    if (topArtists.length > 0) {\n      fetchConcerts();\n    }\n  }, [topArtists]);\n  const fetchFlightsForEvent = async event => {\n    const {\n      state,\n      date,\n      country,\n      id\n    } = event;\n    const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'https://vibent-api.onrender.com';\n    console.log('Show flights clicked for event ID:', id);\n    console.log('Show flights clicked for event:', event);\n    if (!date) {\n      alert('Missing concert date to fetch flights.');\n      return;\n    }\n    if (!id) {\n      console.warn('Event missing unique id:', event);\n      alert('Cannot fetch flights: event ID missing.');\n      return;\n    }\n\n    // Normalize and map state abbrev to full state name first\n    let normalizedState = '';\n    if (state) {\n      if (state.length === 2) {\n        normalizedState = stateAbbrevToFull[state.toUpperCase()] || state;\n      } else {\n        normalizedState = toTitleCase(state.trim());\n      }\n    }\n    const normalizedCountry = country ? toTitleCase(country.trim()) : '';\n    console.log('Normalized State:', normalizedState);\n    console.log('Normalized Country:', normalizedCountry);\n    const lookupKeyState = normalizeKey(normalizedState);\n    const lookupKeyCountry = normalizeKey(normalizedCountry);\n    console.log('Lookup Key State:', lookupKeyState);\n    console.log('Lookup Key Country:', lookupKeyCountry);\n\n    // Strictly check if keys exist in mapping before using them\n    let destinationAirports = [];\n    if (lookupKeyState && normalizedStateToAirports.hasOwnProperty(lookupKeyState)) {\n      destinationAirports = normalizedStateToAirports[lookupKeyState];\n      console.log('Using airports from state:', normalizedState, destinationAirports);\n    } else if (lookupKeyCountry && normalizedStateToAirports.hasOwnProperty(lookupKeyCountry)) {\n      destinationAirports = normalizedStateToAirports[lookupKeyCountry];\n      console.log('Using airports from country:', normalizedCountry, destinationAirports);\n    } else {\n      console.warn('No airports found for:', normalizedState || normalizedCountry);\n      alert(`No airport codes found for ${state || country}.`);\n      return;\n    }\n    if (!destinationAirports || destinationAirports.length === 0) {\n      alert(`No airport codes found for ${state || country}.`);\n      return;\n    }\n\n    // Compute flexible date range\n    const eventDateObj = new Date(date);\n    const startDate = new Date(eventDateObj);\n    startDate.setDate(startDate.getDate() - daysBefore);\n    const endDate = new Date(eventDateObj);\n    endDate.setDate(endDate.getDate() + daysAfter);\n    const formatDate = d => d.toISOString().split('T')[0];\n    const departureDate = formatDate(startDate);\n    const returnDate = formatDate(endDate);\n    console.log('Fetching flights for all destination airports:', destinationAirports);\n    setLoadingFlights(prev => ({\n      ...prev,\n      [id]: true\n    }));\n    setErrorFlights(prev => ({\n      ...prev,\n      [id]: null\n    }));\n    try {\n      let allFlights = [];\n\n      // Sequential fetch per destination airport to avoid rate limits / API overload\n      for (const destination of destinationAirports) {\n        var _json$data;\n        const url = `${BACKEND_URL}/flights?origin=${originAirport}&destination=${destination}&departureDate=${departureDate}&returnDate=${returnDate}`;\n        console.log('Fetching flights from:', originAirport, 'to:', destination);\n        const res = await fetch(url);\n        if (!res.ok) {\n          const text = await res.text();\n          throw new Error(`Flights API returned ${res.status} for destination ${destination}: ${text}`);\n        }\n        const json = await res.json();\n        if (((_json$data = json.data) === null || _json$data === void 0 ? void 0 : _json$data.length) > 0) {\n          allFlights = allFlights.concat(json.data);\n        }\n\n        // Optional: small delay between requests to avoid hammering API\n        await delay(100);\n      }\n\n      // Optional: deduplicate flights if needed (by some unique id)\n      // For now, just setting all combined flights\n      setFlightOffers(prev => ({\n        ...prev,\n        [id]: allFlights\n      }));\n    } catch (error) {\n      console.error(`Error fetching flights for event ${id}:`, error);\n      setErrorFlights(prev => ({\n        ...prev,\n        [id]: error.message\n      }));\n      setFlightOffers(prev => ({\n        ...prev,\n        [id]: []\n      }));\n    } finally {\n      setLoadingFlights(prev => ({\n        ...prev,\n        [id]: false\n      }));\n    }\n  };\n\n  // Flatten and deduplicate airport codes for origin airport dropdown\n  const allAirports = [...new Set(Object.values(stateToAirports).flat())];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top-artists-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Your Top Spotify Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"originAirport\",\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Select your home airport:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"originAirport\",\n        value: originAirport,\n        onChange: e => setOriginAirport(e.target.value),\n        style: {\n          padding: '8px',\n          fontSize: '1rem',\n          borderRadius: '6px'\n        },\n        children: allAirports.map(code => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: code,\n          children: code\n        }, code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px 0',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Arrive up to\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          value: daysBefore,\n          onChange: e => setDaysBefore(Number(e.target.value)),\n          style: {\n            width: '40px',\n            margin: '0 5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), ' ', \"day(s) before\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: '15px'\n        },\n        children: [\"Leave up to\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          value: daysAfter,\n          onChange: e => setDaysAfter(Number(e.target.value)),\n          style: {\n            width: '40px',\n            margin: '0 5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), ' ', \"day(s) after\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Filter by City or State (e.g. New York)\",\n        value: locationFilter,\n        onChange: e => setLocationFilter(e.target.value),\n        style: {\n          padding: '10px',\n          fontSize: '1rem',\n          borderRadius: '8px',\n          border: '1px solid #ccc',\n          width: '250px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        color: 'red',\n        margin: '10px 0'\n      },\n      children: [\"Error loading concerts: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"artist-list\",\n      children: topArtists.map((artist, index) => {\n        var _artist$images, _artist$images$;\n        const concerts = concertData[artist.name] || [];\n        const filteredConcerts = concerts.filter(event => {\n          const query = locationFilter.toLowerCase();\n          return !locationFilter || event.city && event.city.toLowerCase().includes(query) || event.state && event.state.toLowerCase().includes(query) || event.country && event.country.toLowerCase().includes(query) || event.venue && event.venue.toLowerCase().includes(query) || event.name && event.name.toLowerCase().includes(query);\n        });\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"artist-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: (_artist$images = artist.images) === null || _artist$images === void 0 ? void 0 : (_artist$images$ = _artist$images[0]) === null || _artist$images$ === void 0 ? void 0 : _artist$images$.url,\n            alt: artist.name,\n            className: \"artist-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"artist-name\",\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"artist-popularity\",\n              children: [\"Popularity: \", artist.popularity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"loading-concerts\",\n              children: \"Loading concerts...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 19\n            }, this) : filteredConcerts.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleExpanded(artist.name),\n                style: {\n                  marginTop: '10px',\n                  backgroundColor: '#1DB954',\n                  color: 'white',\n                  border: 'none',\n                  padding: '6px 12px',\n                  borderRadius: '6px',\n                  cursor: 'pointer'\n                },\n                children: expandedArtists[artist.name] ? 'Hide Concerts' : 'Show All Concerts'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 21\n              }, this), expandedArtists[artist.name] && /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"concert-list\",\n                style: {\n                  marginTop: '10px'\n                },\n                children: filteredConcerts.map((event, i) => {\n                  var _flightOffers$event$i;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"concert-item\",\n                    style: {\n                      marginBottom: '20px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                      href: event.url,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      style: {\n                        color: '#1DB954',\n                        textDecoration: 'underline'\n                      },\n                      children: event.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 29\n                    }, this), \" \\u2014 \", event.date, \" @ \", event.venue, /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: '8px'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        onClick: e => {\n                          e.stopPropagation();\n                          if (!loadingFlights[event.id]) {\n                            fetchFlightsForEvent(event);\n                          }\n                        },\n                        disabled: loadingFlights[event.id],\n                        style: {\n                          backgroundColor: loadingFlights[event.id] ? '#555' : '#0070f3',\n                          color: 'white',\n                          border: 'none',\n                          padding: '5px 10px',\n                          borderRadius: '5px',\n                          cursor: loadingFlights[event.id] ? 'not-allowed' : 'pointer',\n                          fontSize: '0.9rem'\n                        },\n                        children: loadingFlights[event.id] ? 'Loading Flights...' : 'Show Flights'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 540,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 29\n                    }, this), errorFlights[event.id] && /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        color: 'red'\n                      },\n                      children: [\"Error loading flights: \", errorFlights[event.id]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 31\n                    }, this), ((_flightOffers$event$i = flightOffers[event.id]) === null || _flightOffers$event$i === void 0 ? void 0 : _flightOffers$event$i.length) > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n                      style: {\n                        marginTop: '10px',\n                        paddingLeft: '20px'\n                      },\n                      children: flightOffers[event.id].map((flight, idx) => {\n                        var _flight$itineraries, _flight$price;\n                        const itinerary = (_flight$itineraries = flight.itineraries) === null || _flight$itineraries === void 0 ? void 0 : _flight$itineraries[0];\n                        if (!itinerary) return null;\n                        const segments = itinerary.segments || [];\n                        if (segments.length === 0) return null;\n                        const firstSegment = segments[0];\n                        const lastSegment = segments[segments.length - 1];\n                        const departureTime = new Date(firstSegment.departure.at);\n                        const arrivalTime = new Date(lastSegment.arrival.at);\n                        const durationMinutes = (arrivalTime - departureTime) / (1000 * 60);\n                        const hours = Math.floor(durationMinutes / 60);\n                        const minutes = Math.round(durationMinutes % 60);\n                        const durationStr = `${hours}h ${minutes}m`;\n\n                        // Get unique carrier codes from segments\n                        const airlineCodes = [...new Set(segments.map(seg => seg.carrierCode))];\n\n                        // Map codes to full names (fall back to code if no name found)\n                        const airlineNamesList = airlineCodes.map(code => airlineNames[code] || code);\n\n                        // Combine into display string: \"American Airlines (AA), Delta Air Lines (DL)\"\n                        const airlinesDisplay = airlineNamesList.map((name, i) => `${name} (${airlineCodes[i]})`).join(', ');\n                        const bookingUrl = flight.bookingLink || null;\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          style: {\n                            fontSize: '0.9rem',\n                            marginBottom: '8px'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Airline(s):\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 602,\n                            columnNumber: 43\n                          }, this), \" \", airlinesDisplay, \" |\\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Price:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 603,\n                            columnNumber: 43\n                          }, this), \" $\", (_flight$price = flight.price) === null || _flight$price === void 0 ? void 0 : _flight$price.total, \" |\\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Depart:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 604,\n                            columnNumber: 43\n                          }, this), \" \", formatWithTimezone(departureTime, event.state), \" (\", firstSegment.departure.iataCode, \") |\\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Arrive:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 605,\n                            columnNumber: 43\n                          }, this), \" \", formatWithTimezone(arrivalTime, event.state), \" (\", lastSegment.arrival.iataCode, \") |\\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Duration:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 606,\n                            columnNumber: 43\n                          }, this), \" \", durationStr, \" |\\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Stops:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 607,\n                            columnNumber: 43\n                          }, this), \" \", segments.length - 1, bookingUrl && /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [\" | \", /*#__PURE__*/_jsxDEV(\"a\", {\n                              href: bookingUrl,\n                              target: \"_blank\",\n                              rel: \"noopener noreferrer\",\n                              children: \"Book flight\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 609,\n                              columnNumber: 50\n                            }, this)]\n                          }, void 0, true)]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 601,\n                          columnNumber: 41\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 568,\n                      columnNumber: 33\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-concerts\",\n              children: \"No concerts found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n};\n_s(TopArtistsList, \"chNqumMGs0WCjzqncFmnC84XBjE=\");\n_c = TopArtistsList;\nexport default TopArtistsList;\nvar _c;\n$RefreshReg$(_c, \"TopArtistsList\");","map":{"version":3,"names":["React","useEffect","useState","DateTime","jsxDEV","_jsxDEV","Fragment","_Fragment","stateToAirports","airlineNames","formatWithTimezone","dateTimeStr","state","stateTimezones","timezone","fromISO","zone","setZone","toFormat","console","log","Object","keys","length","normalizeKey","str","toLowerCase","replace","normalizedStateToAirports","fromEntries","entries","map","airports","TopArtistsList","topArtists","onShowRelatedArtists","onShowConcerts","_s","concertData","setConcertData","expandedArtists","setExpandedArtists","loading","setLoading","error","setError","locationFilter","setLocationFilter","originAirport","setOriginAirport","daysBefore","setDaysBefore","daysAfter","setDaysAfter","flightOffers","setFlightOffers","loadingFlights","setLoadingFlights","errorFlights","setErrorFlights","toggleExpanded","artistName","prev","toTitleCase","trim","split","filter","Boolean","word","charAt","toUpperCase","slice","join","delay","ms","Promise","resolve","setTimeout","stateAbbrevToFull","AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","dateObj","fullState","tz","stateToTimezone","Intl","DateTimeFormat","timeZone","weekday","month","day","hour","minute","format","err","warn","toLocaleString","fetchConcerts","data","index","artist","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","url","encodeURIComponent","name","res","fetch","ok","text","Error","status","json","Array","isArray","events","message","fetchFlightsForEvent","event","date","country","id","alert","normalizedState","normalizedCountry","lookupKeyState","lookupKeyCountry","destinationAirports","hasOwnProperty","eventDateObj","Date","startDate","setDate","getDate","endDate","formatDate","d","toISOString","departureDate","returnDate","allFlights","destination","_json$data","concat","allAirports","Set","values","flat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","textAlign","htmlFor","marginRight","value","onChange","e","target","padding","fontSize","borderRadius","code","type","min","Number","width","marginLeft","placeholder","border","color","_artist$images","_artist$images$","concerts","filteredConcerts","query","city","includes","venue","src","images","alt","popularity","onClick","marginTop","backgroundColor","cursor","i","_flightOffers$event$i","marginBottom","href","rel","textDecoration","stopPropagation","disabled","paddingLeft","flight","idx","_flight$itineraries","_flight$price","itinerary","itineraries","segments","firstSegment","lastSegment","departureTime","departure","at","arrivalTime","arrival","durationMinutes","hours","Math","floor","minutes","round","durationStr","airlineCodes","seg","carrierCode","airlineNamesList","airlinesDisplay","bookingUrl","bookingLink","price","total","iataCode","_c","$RefreshReg$"],"sources":["/Users/joyzhang/vibent/frontend/src/components/TopArtistsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './TopArtistsList.css';\nimport { DateTime } from \"luxon\";\n\nconst stateToAirports = {\n  \"Alabama\": [\"BHM\", \"HSV\", \"MGM\", \"MOB\"], // Birmingham, Huntsville, Montgomery, Mobile\n  \"Alaska\": [\"ANC\", \"FAI\", \"JNU\", \"SEA\"], // Anchorage, Fairbanks, Juneau, plus Seattle (common hub)\n  \"Arizona\": [\"PHX\", \"TUS\", \"SDL\"], // Phoenix, Tucson, Scottsdale (private/charter)\n  \"Arkansas\": [\"XNA\", \"LIT\", \"FSM\"], // Northwest Arkansas, Little Rock, Fort Smith\n  \"California\": [\"LAX\", \"SFO\", \"SAN\", \"SJC\", \"OAK\", \"SMF\", \"BUR\", \"ONT\", \"SNA\", \"LGB\"], // Major CA airports\n  \"Colorado\": [\"DEN\", \"COS\", \"GJT\"], // Denver, Colorado Springs, Grand Junction\n  \"Connecticut\": [\"BDL\", \"HVN\"], // Bradley (Hartford), Tweed New Haven\n  \"Delaware\": [\"ILG\"], // Wilmington (small, near Philadelphia)\n  \"District of Columbia\": [\"DCA\", \"IAD\", \"BWI\"], // Reagan, Dulles, Baltimore-Washington\n  \"Florida\": [\"MIA\", \"FLL\", \"TPA\", \"MCO\", \"RSW\", \"JAX\", \"PBI\"], // Miami, Fort Lauderdale, Tampa, Orlando, Southwest Florida, Jacksonville, Palm Beach\n  \"Georgia\": [\"ATL\", \"SAV\", \"AGS\", \"MCN\"], // Atlanta, Savannah, Augusta, Macon\n  \"Hawaii\": [\"HNL\", \"OGG\", \"KOA\", \"LIH\"], // Honolulu, Maui, Kona, Lihue\n  \"Idaho\": [\"BOI\", \"IDA\"], // Boise, Idaho Falls\n  \"Illinois\": [\"ORD\", \"MDW\", \"SPI\", \"RFD\"], // Oâ€™Hare, Midway, Springfield, Rockford\n  \"Indiana\": [\"IND\", \"SBN\"], // Indianapolis, South Bend\n  \"Iowa\": [\"DSM\", \"CID\", \"MLI\"], // Des Moines, Cedar Rapids, Moline\n  \"Kansas\": [\"ICT\", \"MCI\", \"FOE\"], // Wichita, Kansas City, Topeka\n  \"Kentucky\": [\"CVG\", \"SDF\", \"LEX\"], // Cincinnati/Northern KY, Louisville, Lexington\n  \"Louisiana\": [\"MSY\", \"BTR\", \"LFT\"], // New Orleans, Baton Rouge, Lafayette\n  \"Maine\": [\"PWM\", \"BGR\"], // Portland, Bangor\n  \"Maryland\": [\"BWI\", \"MTN\"], // Baltimore-Washington, Martin State\n  \"Massachusetts\": [\"BOS\", \"ORH\", \"EWB\"], // Boston Logan, Worcester, New Bedford\n  \"Michigan\": [\"DTW\", \"GRR\", \"MBS\", \"AZO\"], // Detroit, Grand Rapids, Saginaw, Kalamazoo\n  \"Minnesota\": [\"MSP\", \"DLH\", \"RST\"], // Minneapolis-St Paul, Duluth, Rochester\n  \"Mississippi\": [\"JAN\", \"GPT\"], // Jackson, Gulfport\n  \"Missouri\": [\"STL\", \"MCI\", \"SGF\"], // St. Louis, Kansas City, Springfield\n  \"Montana\": [\"BIL\", \"GTF\", \"MSO\"], // Billings, Great Falls, Missoula\n  \"Nebraska\": [\"OMA\", \"LNK\"], // Omaha, Lincoln\n  \"Nevada\": [\"LAS\", \"RNO\"], // Las Vegas, Reno\n  \"New Hampshire\": [\"MHT\", \"CON\"], // Manchester, Concord (small)\n  \"New Jersey\": [\"EWR\", \"ACY\", \"TTN\"], // Newark, Atlantic City, Trenton-Mercer\n  \"New Mexico\": [\"ABQ\", \"SRR\"], // Albuquerque, Santa Rosa (small)\n  \"New York\": [\"JFK\", \"LGA\", \"EWR\", \"BUF\", \"ROC\", \"SYR\", \"ALB\"], // JFK, LaGuardia, Newark, Buffalo, Rochester, Syracuse, Albany\n  \"North Carolina\": [\"CLT\", \"RDU\", \"GSO\", \"ILM\"], // Charlotte, Raleigh-Durham, Greensboro, Wilmington\n  \"North Dakota\": [\"FAR\", \"GFK\"], // Fargo, Grand Forks\n  \"Ohio\": [\"CLE\", \"CMH\", \"CVG\", \"DAY\"], // Cleveland, Columbus, Cincinnati, Dayton\n  \"Oklahoma\": [\"OKC\", \"TUL\"], // Oklahoma City, Tulsa\n  \"Oregon\": [\"PDX\", \"EUG\"], // Portland, Eugene\n  \"Pennsylvania\": [\"PHL\", \"PIT\", \"AVP\", \"MDT\"], // Philadelphia, Pittsburgh, Wilkes-Barre/Scranton, Harrisburg\n  \"Rhode Island\": [\"PVD\"], // Providence\n  \"South Carolina\": [\"CHS\", \"GSP\", \"CAE\"], // Charleston, Greenville-Spartanburg, Columbia\n  \"South Dakota\": [\"FSD\", \"RAP\"], // Sioux Falls, Rapid City\n  \"Tennessee\": [\"BNA\", \"MEM\", \"CHA\"], // Nashville, Memphis, Chattanooga\n  \"Texas\": [\"DFW\", \"IAH\", \"AUS\", \"SAT\", \"DAL\", \"HOU\"], // Dallas-Fort Worth, Houston, Austin, San Antonio, Dallas Love, Houston Hobby\n  \"Utah\": [\"SLC\", \"PVU\"], // Salt Lake City, Provo (small)\n  \"Vermont\": [\"BTV\"], // Burlington\n  \"Virginia\": [\"DCA\", \"ORF\", \"RIC\"], // Reagan, Norfolk, Richmond\n  \"Washington\": [\"SEA\", \"GEG\", \"PDX\"], // Seattle, Spokane, Portland (nearby)\n  \"West Virginia\": [\"CRW\", \"HTS\"], // Charleston, Huntington\n  \"Wisconsin\": [\"MKE\", \"MSN\", \"GRB\"], // Milwaukee, Madison, Green Bay\n  \"Wyoming\": [\"JAC\"], // Jackson Hole\n};\n\nconst airlineNames = {\n  \"6X\": \"Amadeus Six\",\n  \"PR\": \"Philippine Airlines\",\n  \"AA\": \"American Airlines\",\n  \"DL\": \"Delta Air Lines\",\n  \"UA\": \"United Airlines\",\n  \"WN\": \"Southwest Airlines\",\n  \"AS\": \"Alaska Airlines\",\n  \"B6\": \"JetBlue Airways\",\n  \"AF\": \"Air France\",\n  \"LH\": \"Lufthansa\",\n  \"EK\": \"Emirates\",\n  \"AC\": \"Air Canada\",\n  \"BA\": \"British Airways\",\n  \"CX\": \"Cathay Pacific\",\n  \"QF\": \"Qantas\",\n  \"SQ\": \"Singapore Airlines\",\n  \"JL\": \"Japan Airlines\",\n  \"NH\": \"All Nippon Airways\",\n  \"IB\": \"Iberia\",\n  \"AZ\": \"Alitalia\",\n  \"KL\": \"KLM Royal Dutch Airlines\",\n  \"TK\": \"Turkish Airlines\",\n  \"SA\": \"South African Airways\",\n  \"NZ\": \"Air New Zealand\",\n  \"EY\": \"Etihad Airways\",\n  \"QR\": \"Qatar Airways\",\n  \"MS\": \"EgyptAir\",\n  \"CX\": \"Cathay Pacific\",\n  \"FI\": \"Icelandair\",\n  \"DL\": \"Delta Air Lines\",\n  \"F9\": \"Frontier Airlines\",\n  \"G4\": \"Allegiant Air\",\n  \"HA\": \"Hawaiian Airlines\",\n  \"VX\": \"Virgin America\",\n  \"WN\": \"Southwest Airlines\",\n  \"YV\": \"Mesa Airlines\",\n};\n\nconst formatWithTimezone = (dateTimeStr, state) => {\n  const stateTimezones = {\n    \"Alabama\": \"America/Chicago\",\n    \"Alaska\": \"America/Anchorage\",\n    \"Arizona\": \"America/Phoenix\",\n    \"Arkansas\": \"America/Chicago\",\n    \"California\": \"America/Los_Angeles\",\n    \"Colorado\": \"America/Denver\",\n    \"Connecticut\": \"America/New_York\",\n    \"Delaware\": \"America/New_York\",\n    \"District of Columbia\": \"America/New_York\",\n    \"Florida\": \"America/New_York\", // see note below\n    \"Georgia\": \"America/New_York\",\n    \"Hawaii\": \"Pacific/Honolulu\",\n    \"Idaho\": \"America/Boise\", // mostly Mountain Time\n    \"Illinois\": \"America/Chicago\",\n    \"Indiana\": \"America/Indiana/Indianapolis\", // mostly Eastern\n    \"Iowa\": \"America/Chicago\",\n    \"Kansas\": \"America/Chicago\", // some parts Mountain Time, but mostly Chicago\n    \"Kentucky\": \"America/New_York\", // mostly Eastern\n    \"Louisiana\": \"America/Chicago\",\n    \"Maine\": \"America/New_York\",\n    \"Maryland\": \"America/New_York\",\n    \"Massachusetts\": \"America/New_York\",\n    \"Michigan\": \"America/Detroit\", // Eastern time\n    \"Minnesota\": \"America/Chicago\",\n    \"Mississippi\": \"America/Chicago\",\n    \"Missouri\": \"America/Chicago\",\n    \"Montana\": \"America/Denver\",\n    \"Nebraska\": \"America/Chicago\", // parts in Mountain Time, but mostly Chicago\n    \"Nevada\": \"America/Los_Angeles\", // parts in Mountain Time\n    \"New Hampshire\": \"America/New_York\",\n    \"New Jersey\": \"America/New_York\",\n    \"New Mexico\": \"America/Denver\",\n    \"New York\": \"America/New_York\",\n    \"North Carolina\": \"America/New_York\",\n    \"North Dakota\": \"America/Chicago\", // parts Mountain Time but mostly Chicago\n    \"Ohio\": \"America/New_York\",\n    \"Oklahoma\": \"America/Chicago\",\n    \"Oregon\": \"America/Los_Angeles\", // some parts in Mountain Time\n    \"Pennsylvania\": \"America/New_York\",\n    \"Rhode Island\": \"America/New_York\",\n    \"South Carolina\": \"America/New_York\",\n    \"South Dakota\": \"America/Chicago\", // parts Mountain Time but mostly Chicago\n    \"Tennessee\": \"America/Chicago\", // mostly Central Time (East Tennessee is Eastern)\n    \"Texas\": \"America/Chicago\", // mostly Central, but West Texas is Mountain Time\n    \"Utah\": \"America/Denver\",\n    \"Vermont\": \"America/New_York\",\n    \"Virginia\": \"America/New_York\",\n    \"Washington\": \"America/Los_Angeles\",\n    \"West Virginia\": \"America/New_York\",\n    \"Wisconsin\": \"America/Chicago\",\n    \"Wyoming\": \"America/Denver\"\n  };\n\n  const timezone = stateTimezones[state] || \"UTC\";\n  return DateTime.fromISO(dateTimeStr, { zone: \"utc\" })\n    .setZone(timezone)\n    .toFormat(\"MMM dd, yyyy hh:mm a ZZZZ\");\n};\n\n\n// Note: States like Florida, Tennessee, Texas, South Dakota, Oregon, North Dakota, Kansas, Nebraska have multiple time zones.\n// You could refine this by checking city/airport location or simply default to main time zone.\n\n\n\n\nconsole.log('Raw stateToAirports:', stateToAirports);\nconsole.log('Is empty?', Object.keys(stateToAirports).length === 0);\n\nconst normalizeKey = str => str.toLowerCase().replace(/\\s+/g, '');\n\nconst normalizedStateToAirports = Object.fromEntries(\n  Object.entries(stateToAirports).map(([state, airports]) => [normalizeKey(state), airports])\n);\n\nconsole.log('Normalized keys:', Object.keys(normalizedStateToAirports));\n\n\n\nconst TopArtistsList = ({ topArtists, onShowRelatedArtists, onShowConcerts }) => {\n  const [concertData, setConcertData] = useState({});\n  const [expandedArtists, setExpandedArtists] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [locationFilter, setLocationFilter] = useState('');\n  const [originAirport, setOriginAirport] = useState('SFO');\n\n  // NEW: flexible arrival/departure days\n  const [daysBefore, setDaysBefore] = useState(1);\n  const [daysAfter, setDaysAfter] = useState(1);\n\n  const [flightOffers, setFlightOffers] = useState({});\n  const [loadingFlights, setLoadingFlights] = useState({});\n  const [errorFlights, setErrorFlights] = useState({});\n\n  const toggleExpanded = (artistName) => {\n    setExpandedArtists(prev => ({\n      ...prev,\n      [artistName]: !prev[artistName]\n    }));\n  };\n\n  const toTitleCase = (str) => {\n    if (!str) return '';\n    return str\n      .trim()\n      .toLowerCase()\n      .split(' ')\n      .filter(Boolean)\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  };\n\n  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  const stateAbbrevToFull = {\n    AL: \"Alabama\", AK: \"Alaska\", AZ: \"Arizona\", AR: \"Arkansas\",\n    CA: \"California\", CO: \"Colorado\", CT: \"Connecticut\", DE: \"Delaware\",\n    DC: \"District of Columbia\", FL: \"Florida\", GA: \"Georgia\", HI: \"Hawaii\",\n    ID: \"Idaho\", IL: \"Illinois\", IN: \"Indiana\", IA: \"Iowa\",\n    KS: \"Kansas\", KY: \"Kentucky\", LA: \"Louisiana\", ME: \"Maine\",\n    MD: \"Maryland\", MA: \"Massachusetts\", MI: \"Michigan\", MN: \"Minnesota\",\n    MS: \"Mississippi\", MO: \"Missouri\", MT: \"Montana\", NE: \"Nebraska\",\n    NV: \"Nevada\", NH: \"New Hampshire\", NJ: \"New Jersey\", NM: \"New Mexico\",\n    NY: \"New York\", NC: \"North Carolina\", ND: \"North Dakota\", OH: \"Ohio\",\n    OK: \"Oklahoma\", OR: \"Oregon\", PA: \"Pennsylvania\", RI: \"Rhode Island\",\n    SC: \"South Carolina\", SD: \"South Dakota\", TN: \"Tennessee\", TX: \"Texas\",\n    UT: \"Utah\", VT: \"Vermont\", VA: \"Virginia\", WA: \"Washington\",\n    WV: \"West Virginia\", WI: \"Wisconsin\", WY: \"Wyoming\"\n  };\n\n\n  const formatWithTimezone = (dateObj, state) => {\n    const fullState = stateAbbrevToFull[state?.toUpperCase()] || state || \"\";\n    const tz = stateToTimezone[fullState.replace(/\\s/g, \"_\")] || \"UTC\";\n\n    try {\n      return new Intl.DateTimeFormat(\"en-US\", {\n        timeZone: tz,\n        weekday: \"short\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }).format(dateObj);\n    } catch (err) {\n      console.warn(\"Timezone format error:\", err);\n      return dateObj.toLocaleString(); // fallback\n    }\n  };\n\n  useEffect(() => {\n    const fetchConcerts = async () => {\n      setLoading(true);\n      setError(null);\n      const data = {};\n\n      for (const [index, artist] of topArtists.entries()) {\n        try {\n          if (index > 0) {\n            await delay(300);\n          }\n\n          const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'https://vibent-api.onrender.com';\n          const url = `${BACKEND_URL}/concerts?artistName=${encodeURIComponent(artist.name)}`;\n          const res = await fetch(url);\n\n          if (!res.ok) {\n            const text = await res.text();\n            throw new Error(`API returned ${res.status}: ${text}`);\n          }\n\n          const json = await res.json();\n          data[artist.name] = Array.isArray(json.events) ? json.events : [];\n        } catch (error) {\n          data[artist.name] = [];\n          console.error(`Concert fetch error for ${artist.name}:`, error);\n          setError(error.message);\n        }\n      }\n\n      setConcertData(data);\n      setLoading(false);\n    };\n\n    if (topArtists.length > 0) {\n      fetchConcerts();\n    }\n  }, [topArtists]);\n\n  const fetchFlightsForEvent = async (event) => {\n    const { state, date, country, id } = event;\n    const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'https://vibent-api.onrender.com';\n  \n    console.log('Show flights clicked for event ID:', id);\n    console.log('Show flights clicked for event:', event);\n  \n    if (!date) {\n      alert('Missing concert date to fetch flights.');\n      return;\n    }\n  \n    if (!id) {\n      console.warn('Event missing unique id:', event);\n      alert('Cannot fetch flights: event ID missing.');\n      return;\n    }\n  \n    // Normalize and map state abbrev to full state name first\n    let normalizedState = '';\n    if (state) {\n      if (state.length === 2) {\n        normalizedState = stateAbbrevToFull[state.toUpperCase()] || state;\n      } else {\n        normalizedState = toTitleCase(state.trim());\n      }\n    }\n  \n    const normalizedCountry = country ? toTitleCase(country.trim()) : '';\n  \n    console.log('Normalized State:', normalizedState);\n    console.log('Normalized Country:', normalizedCountry);\n  \n    const lookupKeyState = normalizeKey(normalizedState);\n    const lookupKeyCountry = normalizeKey(normalizedCountry);\n  \n    console.log('Lookup Key State:', lookupKeyState);\n    console.log('Lookup Key Country:', lookupKeyCountry);\n  \n    // Strictly check if keys exist in mapping before using them\n    let destinationAirports = [];\n    if (lookupKeyState && normalizedStateToAirports.hasOwnProperty(lookupKeyState)) {\n      destinationAirports = normalizedStateToAirports[lookupKeyState];\n      console.log('Using airports from state:', normalizedState, destinationAirports);\n    } else if (lookupKeyCountry && normalizedStateToAirports.hasOwnProperty(lookupKeyCountry)) {\n      destinationAirports = normalizedStateToAirports[lookupKeyCountry];\n      console.log('Using airports from country:', normalizedCountry, destinationAirports);\n    } else {\n      console.warn('No airports found for:', normalizedState || normalizedCountry);\n      alert(`No airport codes found for ${state || country}.`);\n      return;\n    }\n  \n    if (!destinationAirports || destinationAirports.length === 0) {\n      alert(`No airport codes found for ${state || country}.`);\n      return;\n    }\n  \n    // Compute flexible date range\n    const eventDateObj = new Date(date);\n    const startDate = new Date(eventDateObj);\n    startDate.setDate(startDate.getDate() - daysBefore);\n    const endDate = new Date(eventDateObj);\n    endDate.setDate(endDate.getDate() + daysAfter);\n  \n    const formatDate = d => d.toISOString().split('T')[0];\n    const departureDate = formatDate(startDate);\n    const returnDate = formatDate(endDate);\n  \n    console.log('Fetching flights for all destination airports:', destinationAirports);\n  \n    setLoadingFlights(prev => ({ ...prev, [id]: true }));\n    setErrorFlights(prev => ({ ...prev, [id]: null }));\n  \n    try {\n      let allFlights = [];\n  \n      // Sequential fetch per destination airport to avoid rate limits / API overload\n      for (const destination of destinationAirports) {\n        const url = `${BACKEND_URL}/flights?origin=${originAirport}&destination=${destination}&departureDate=${departureDate}&returnDate=${returnDate}`;\n        console.log('Fetching flights from:', originAirport, 'to:', destination);\n        const res = await fetch(url);\n  \n        if (!res.ok) {\n          const text = await res.text();\n          throw new Error(`Flights API returned ${res.status} for destination ${destination}: ${text}`);\n        }\n  \n        const json = await res.json();\n  \n        if (json.data?.length > 0) {\n          allFlights = allFlights.concat(json.data);\n        }\n  \n        // Optional: small delay between requests to avoid hammering API\n        await delay(100);\n      }\n  \n      // Optional: deduplicate flights if needed (by some unique id)\n      // For now, just setting all combined flights\n      setFlightOffers(prev => ({\n        ...prev,\n        [id]: allFlights\n      }));\n    } catch (error) {\n      console.error(`Error fetching flights for event ${id}:`, error);\n      setErrorFlights(prev => ({ ...prev, [id]: error.message }));\n      setFlightOffers(prev => ({ ...prev, [id]: [] }));\n    } finally {\n      setLoadingFlights(prev => ({ ...prev, [id]: false }));\n    }\n  };  \n  \n  // Flatten and deduplicate airport codes for origin airport dropdown\n  const allAirports = [...new Set(Object.values(stateToAirports).flat())];\n\n  return (\n    <div className=\"top-artists-container\">\n      <h1 className=\"title\">Your Top Spotify Artists</h1>\n\n      {/* Origin Airport Selector */}\n      <div style={{ margin: '20px 0', textAlign: 'center' }}>\n        <label htmlFor=\"originAirport\" style={{ marginRight: '10px' }}>\n          Select your home airport:\n        </label>\n        <select\n          id=\"originAirport\"\n          value={originAirport}\n          onChange={(e) => setOriginAirport(e.target.value)}\n          style={{ padding: '8px', fontSize: '1rem', borderRadius: '6px' }}\n        >\n          {allAirports.map((code) => (\n            <option key={code} value={code}>\n              {code}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Flexible Date Inputs */}\n      <div style={{ margin: '10px 0', textAlign: 'center' }}>\n        <label>\n          Arrive up to{' '}\n          <input\n            type=\"number\"\n            min=\"0\"\n            value={daysBefore}\n            onChange={(e) => setDaysBefore(Number(e.target.value))}\n            style={{ width: '40px', margin: '0 5px' }}\n          />{' '}\n          day(s) before\n        </label>\n        <label style={{ marginLeft: '15px' }}>\n          Leave up to{' '}\n          <input\n            type=\"number\"\n            min=\"0\"\n            value={daysAfter}\n            onChange={(e) => setDaysAfter(Number(e.target.value))}\n            style={{ width: '40px', margin: '0 5px' }}\n          />{' '}\n          day(s) after\n        </label>\n      </div>\n\n      {/* Location Filter */}\n      <div style={{ margin: '20px 0', textAlign: 'center' }}>\n        <input\n          type=\"text\"\n          placeholder=\"Filter by City or State (e.g. New York)\"\n          value={locationFilter}\n          onChange={(e) => setLocationFilter(e.target.value)}\n          style={{\n            padding: '10px',\n            fontSize: '1rem',\n            borderRadius: '8px',\n            border: '1px solid #ccc',\n            width: '250px'\n          }}\n        />\n      </div>\n\n      {error && (\n        <div className=\"error-message\" style={{ color: 'red', margin: '10px 0' }}>\n          Error loading concerts: {error}\n        </div>\n      )}\n\n      <ul className=\"artist-list\">\n        {topArtists.map((artist, index) => {\n          const concerts = concertData[artist.name] || [];\n\n          const filteredConcerts = concerts.filter(event => {\n            const query = locationFilter.toLowerCase();\n            return (\n              !locationFilter ||\n              (event.city && event.city.toLowerCase().includes(query)) ||\n              (event.state && event.state.toLowerCase().includes(query)) ||\n              (event.country && event.country.toLowerCase().includes(query)) ||\n              (event.venue && event.venue.toLowerCase().includes(query)) ||\n              (event.name && event.name.toLowerCase().includes(query))\n            );\n          });\n\n          return (\n            <li key={index} className=\"artist-card\">\n              <img\n                src={artist.images?.[0]?.url}\n                alt={artist.name}\n                className=\"artist-img\"\n              />\n              <div>\n                <h3 className=\"artist-name\">{artist.name}</h3>\n                <p className=\"artist-popularity\">Popularity: {artist.popularity}</p>\n\n                {/* Concerts */}\n                {loading ? (\n                  <p className=\"loading-concerts\">Loading concerts...</p>\n                ) : filteredConcerts.length > 0 ? (\n                  <>\n                    <button\n                      onClick={() => toggleExpanded(artist.name)}\n                      style={{\n                        marginTop: '10px',\n                        backgroundColor: '#1DB954',\n                        color: 'white',\n                        border: 'none',\n                        padding: '6px 12px',\n                        borderRadius: '6px',\n                        cursor: 'pointer'\n                      }}\n                    >\n                      {expandedArtists[artist.name] ? 'Hide Concerts' : 'Show All Concerts'}\n                    </button>\n\n                    {expandedArtists[artist.name] && (\n                      <ul className=\"concert-list\" style={{ marginTop: '10px' }}>\n                        {filteredConcerts.map((event, i) => (\n                          <li key={i} className=\"concert-item\" style={{ marginBottom: '20px' }}>\n                            <a\n                              href={event.url}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              style={{ color: '#1DB954', textDecoration: 'underline' }}\n                            >\n                              {event.name}\n                            </a> â€” {event.date} @ {event.venue}\n\n                            {/* Show Flights */}\n                            <div style={{ marginTop: '8px' }}>\n                              <button\n                                type=\"button\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  if (!loadingFlights[event.id]) {\n                                    fetchFlightsForEvent(event);\n                                  }\n                                }}\n                                disabled={loadingFlights[event.id]}\n                                style={{\n                                  backgroundColor: loadingFlights[event.id] ? '#555' : '#0070f3',\n                                  color: 'white',\n                                  border: 'none',\n                                  padding: '5px 10px',\n                                  borderRadius: '5px',\n                                  cursor: loadingFlights[event.id] ? 'not-allowed' : 'pointer',\n                                  fontSize: '0.9rem'\n                                }}\n                              >\n                                {loadingFlights[event.id] ? 'Loading Flights...' : 'Show Flights'}\n                              </button>\n                            </div>\n\n                            {errorFlights[event.id] && (\n                              <p style={{ color: 'red' }}>Error loading flights: {errorFlights[event.id]}</p>\n                            )}\n\n                              {flightOffers[event.id]?.length > 0 && (\n                                <ul style={{ marginTop: '10px', paddingLeft: '20px' }}>\n                                  {flightOffers[event.id].map((flight, idx) => {\n                                      const itinerary = flight.itineraries?.[0];\n                                      if (!itinerary) return null;\n\n                                      const segments = itinerary.segments || [];\n                                      if (segments.length === 0) return null;\n\n                                      const firstSegment = segments[0];\n                                      const lastSegment = segments[segments.length - 1];\n\n                                      const departureTime = new Date(firstSegment.departure.at);\n                                      const arrivalTime = new Date(lastSegment.arrival.at);\n\n                                      const durationMinutes = (arrivalTime - departureTime) / (1000 * 60);\n                                      const hours = Math.floor(durationMinutes / 60);\n                                      const minutes = Math.round(durationMinutes % 60);\n                                      const durationStr = `${hours}h ${minutes}m`;\n\n                                      // Get unique carrier codes from segments\n                                      const airlineCodes = [...new Set(segments.map(seg => seg.carrierCode))];\n\n                                      // Map codes to full names (fall back to code if no name found)\n                                      const airlineNamesList = airlineCodes.map(code => airlineNames[code] || code);\n\n                                      // Combine into display string: \"American Airlines (AA), Delta Air Lines (DL)\"\n                                      const airlinesDisplay = airlineNamesList\n                                        .map((name, i) => `${name} (${airlineCodes[i]})`)\n                                        .join(', ');\n\n                                      const bookingUrl = flight.bookingLink || null;\n\n                                      return (\n                                        <li key={idx} style={{ fontSize: '0.9rem', marginBottom: '8px' }}>\n                                          <strong>Airline(s):</strong> {airlinesDisplay} |&nbsp;\n                                          <strong>Price:</strong> ${flight.price?.total} |&nbsp;\n                                          <strong>Depart:</strong> {formatWithTimezone(departureTime, event.state)} ({firstSegment.departure.iataCode}) |&nbsp;\n                                          <strong>Arrive:</strong> {formatWithTimezone(arrivalTime, event.state)} ({lastSegment.arrival.iataCode}) |&nbsp;\n                                          <strong>Duration:</strong> {durationStr} |&nbsp;\n                                          <strong>Stops:</strong> {segments.length - 1}\n                                          {bookingUrl && (\n                                            <> | <a href={bookingUrl} target=\"_blank\" rel=\"noopener noreferrer\">Book flight</a></>\n                                          )}\n                                        </li>\n                                      );\n                                      \n                                    })}\n                                </ul>\n                              )}\n                          </li>\n                        ))}\n                      </ul>\n                    )}\n                  </>\n                ) : (\n                  <p className=\"no-concerts\">No concerts found</p>\n                )}\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TopArtistsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}