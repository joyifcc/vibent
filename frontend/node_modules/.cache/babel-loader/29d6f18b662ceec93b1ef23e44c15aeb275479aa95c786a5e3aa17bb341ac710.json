{"ast":null,"code":"var _jsxFileName = \"/Users/joyzhang/vibent/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport LoginButton from './components/LoginButton';\nimport TopArtistsList from './components/TopArtistsList';\nimport RelatedArtistsList from './components/RelatedArtistsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'https://vibent-api.onrender.com';\nfunction App() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [refreshToken, setRefreshToken] = useState(null);\n  const [expiresIn, setExpiresIn] = useState(null);\n  const [topArtists, setTopArtists] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedArtistId, setSelectedArtistId] = useState(null);\n  const [relatedArtists, setRelatedArtists] = useState([]);\n  const [showRelated, setShowRelated] = useState(false);\n  const [relatedLoading, setRelatedLoading] = useState(false);\n\n  // Parse tokens from URL params on load\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const accessToken = params.get('access_token');\n    const rToken = params.get('refresh_token');\n    const expires = params.get('expires_in');\n\n    // Check for view state in URL\n    const view = params.get('view');\n    if (view === 'related') {\n      setShowRelated(true);\n    }\n    if (accessToken) {\n      setToken(accessToken);\n      setRefreshToken(rToken);\n      setExpiresIn(Number(expires) || 3600);\n\n      // Clear only the token params, preserve view param if needed\n      const newUrl = new URL(window.location.href);\n      newUrl.searchParams.delete('access_token');\n      newUrl.searchParams.delete('refresh_token');\n      newUrl.searchParams.delete('expires_in');\n      window.history.replaceState({}, document.title, newUrl.toString());\n    }\n  }, []);\n  const refreshAccessToken = useCallback(() => {\n    if (!refreshToken) return;\n    fetch(`${BACKEND_URL}/refresh_token?refresh_token=${refreshToken}`).then(res => {\n      if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);\n      return res.json();\n    }).then(data => {\n      if (data.access_token) {\n        setToken(data.access_token);\n        setExpiresIn(data.expires_in || 3600);\n        setError(null);\n      } else {\n        throw new Error('No access token in response');\n      }\n    }).catch(err => {\n      console.error(\"Token refresh failed:\", err);\n      setError(`Failed to refresh token: ${err.message}`);\n      if (!err.message.includes('Failed to fetch')) {\n        setToken(null);\n        setRefreshToken(null);\n      }\n    });\n  }, [refreshToken]);\n  useEffect(() => {\n    if (!expiresIn || !refreshToken) return;\n    const refreshTime = (expiresIn - 60) * 1000;\n    const timer = setTimeout(() => {\n      refreshAccessToken();\n    }, refreshTime);\n    return () => clearTimeout(timer);\n  }, [expiresIn, refreshToken, refreshAccessToken]);\n  useEffect(() => {\n    if (!token) return;\n    setLoading(true);\n    fetch('https://api.spotify.com/v1/me/top/artists', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      if (!res.ok) {\n        if (res.status === 401) {\n          refreshAccessToken();\n          throw new Error('Token expired, attempting refresh');\n        }\n        throw new Error(`Failed to fetch top artists (${res.status})`);\n      }\n      return res.json();\n    }).then(data => {\n      setTopArtists(data.items || []);\n      setError(null);\n      if (data.items && data.items.length) {\n        setSelectedArtistId(data.items[0].id);\n      }\n    }).catch(err => {\n      console.error(\"Error fetching top artists:\", err);\n      setError(err.message);\n    }).finally(() => setLoading(false));\n  }, [token, refreshAccessToken]);\n  const handleArtistSelect = artistId => {\n    setSelectedArtistId(artistId);\n  };\n  const handleLoginClick = () => {\n    if (!BACKEND_URL) {\n      setError(\"Backend URL is not configured. Please check your environment variables.\");\n      return;\n    }\n    window.location.href = `${BACKEND_URL}/login`;\n  };\n  const handleShowRelated = useCallback(async () => {\n    try {\n      setRelatedLoading(true);\n      setError(null); // Clear any previous errors\n\n      // Try direct Spotify API call first as a test\n      console.log(\"Testing direct Spotify API call...\");\n      try {\n        const directResponse = await fetch('https://api.spotify.com/v1/artists/3TVXtAsR1Inumwj472S9r4/related-artists', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(`Direct Spotify API call status: ${directResponse.status}`);\n        if (directResponse.ok) {\n          var _directData$artists;\n          const directData = await directResponse.json();\n          console.log(`Direct call successful! Found ${(_directData$artists = directData.artists) === null || _directData$artists === void 0 ? void 0 : _directData$artists.length} related artists`);\n        } else {\n          const directErrorText = await directResponse.text();\n          console.error(`Direct call failed: ${directErrorText}`);\n        }\n      } catch (directErr) {\n        console.error(\"Direct API call failed:\", directErr);\n      }\n\n      // Print backend URL for verification\n      console.log(`Using backend URL: ${BACKEND_URL}`);\n\n      // Test backend root endpoint to verify connectivity\n      try {\n        const rootResponse = await fetch(`${BACKEND_URL}/`);\n        console.log(`Backend root endpoint status: ${rootResponse.status}`);\n        if (rootResponse.ok) {\n          const rootText = await rootResponse.text();\n          console.log(`Backend root response: ${rootText}`);\n        }\n      } catch (rootErr) {\n        console.error(\"Backend connectivity test failed:\", rootErr);\n      }\n\n      // Try with explicit encoding of the ID\n      const drakeId = encodeURIComponent(\"3TVXtAsR1Inumwj472S9r4\");\n      console.log(`Testing with URL-encoded Drake ID: ${drakeId}`);\n      try {\n        const encodedResponse = await fetch(`${BACKEND_URL}/related-artists/${drakeId}?access_token=${encodeURIComponent(token)}`);\n        console.log(`Encoded request status: ${encodedResponse.status}`);\n        if (encodedResponse.ok) {\n          var _encodedData$artists;\n          const encodedData = await encodedResponse.json();\n          console.log(`Encoded request successful! Found ${(_encodedData$artists = encodedData.artists) === null || _encodedData$artists === void 0 ? void 0 : _encodedData$artists.length} related artists`);\n        } else {\n          const encodedErrorText = await encodedResponse.text();\n          console.error(`Encoded request failed: ${encodedErrorText}`);\n        }\n      } catch (encodedErr) {\n        console.error(\"Encoded request failed:\", encodedErr);\n      }\n      console.log(\"Fetching related artists for top artists...\");\n      let allRelatedArtists = [];\n\n      // Use direct Spotify API as a fallback if backend route is failing\n      const useDirectApi = true; // Set to true to bypass your backend\n\n      // Take only the first 5 top artists to avoid making too many requests\n      const artistsToProcess = topArtists.slice(0, 5);\n      for (const artist of artistsToProcess) {\n        // Log the exact URL and artist ID\n        const requestUrl = `${BACKEND_URL}/related-artists/${artist.id}?access_token=${token}`;\n        console.log(`Making request to: ${requestUrl}`);\n        console.log(`Artist ID: \"${artist.id}\" for artist \"${artist.name}\"`);\n        try {\n          var _data$artists;\n          const response = await fetch(requestUrl);\n          console.log(`Response status for ${artist.name}: ${response.status}`);\n          if (!response.ok) {\n            console.error(`Failed request for ${artist.name}. Status: ${response.status}`);\n            // Log the response body for more details\n            try {\n              const errorBody = await response.text();\n              console.error(`Error response body: ${errorBody}`);\n            } catch (e) {\n              console.error(\"Couldn't read error response body\");\n            }\n            if (response.status === 404) {\n              console.log(`No artist found with ID ${artist.id} (${artist.name}). Skipping.`);\n            }\n            continue;\n          }\n          const data = await response.json();\n          console.log(`Found ${((_data$artists = data.artists) === null || _data$artists === void 0 ? void 0 : _data$artists.length) || 0} related artists for ${artist.name}`);\n          if (data.artists && data.artists.length > 0) {\n            // Take top 3 related artists from each\n            const top3Related = data.artists.slice(0, 3);\n            allRelatedArtists = [...allRelatedArtists, ...top3Related];\n          }\n        } catch (artistError) {\n          console.error(`Error processing ${artist.name}:`, artistError);\n          // Continue to the next artist\n        }\n      }\n\n      // Remove duplicates\n      const uniqueArtistsMap = new Map();\n      allRelatedArtists.forEach(artist => {\n        if (!uniqueArtistsMap.has(artist.id)) {\n          uniqueArtistsMap.set(artist.id, artist);\n        }\n      });\n      const uniqueArtists = Array.from(uniqueArtistsMap.values());\n      console.log(`Total unique related artists found: ${uniqueArtists.length}`);\n      setRelatedArtists(uniqueArtists);\n      setShowRelated(true);\n\n      // Update URL to remember the view state\n      const newUrl = new URL(window.location.href);\n      newUrl.searchParams.set('view', 'related');\n      window.history.pushState({}, document.title, newUrl.toString());\n    } catch (err) {\n      console.error(\"Error in handleShowRelated:\", err);\n      setError(`Failed to fetch related artists: ${err.message}`);\n    } finally {\n      setRelatedLoading(false);\n    }\n  }, [token, topArtists, BACKEND_URL]);\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const view = params.get('view');\n    if (view === 'related' && token && topArtists.length > 0 && !relatedArtists.length) {\n      console.log(\"View parameter is 'related', fetching related artists...\");\n      handleShowRelated();\n    }\n  }, [token, topArtists, relatedArtists.length, handleShowRelated]);\n  const handleBackToTop = () => {\n    setShowRelated(false);\n\n    // Update URL to remember the view state\n    const newUrl = new URL(window.location.href);\n    newUrl.searchParams.delete('view');\n    window.history.pushState({}, document.title, newUrl.toString());\n  };\n  const [concertResults, setConcertResults] = useState({});\n  const [concertLoading, setConcertLoading] = useState(null);\n  const ticketmasterKey = process.env.REACT_APP_TICKETMASTER_API_KEY;\n  const handleFindConcerts = async artistName => {\n    setConcertLoading(artistName);\n    setError(null);\n    try {\n      const response = await fetch(`https://app.ticketmaster.com/discovery/v2/events.json?keyword=${encodeURIComponent(artistName)}&apikey=${ticketmasterKey}`);\n      const data = await response.json();\n      if (data._embedded && data._embedded.events) {\n        setConcertResults(prev => ({\n          ...prev,\n          [artistName]: data._embedded.events.slice(0, 3) // show top 3\n        }));\n      } else {\n        setConcertResults(prev => ({\n          ...prev,\n          [artistName]: []\n        }));\n      }\n    } catch (err) {\n      setError(`Error fetching concerts for ${artistName}: ${err.message}`);\n    } finally {\n      setConcertLoading(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: '100vh',\n      background: 'linear-gradient(to bottom, #191414, #1DB954)',\n      fontFamily: 'Arial, sans-serif',\n      color: 'white'\n    },\n    children: [!token ? /*#__PURE__*/_jsxDEV(LoginButton, {\n      onClick: handleLoginClick,\n      backendUrl: BACKEND_URL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !showRelated ? /*#__PURE__*/_jsxDEV(TopArtistsList, {\n        topArtists: topArtists,\n        onArtistSelect: handleArtistSelect,\n        selectedArtistId: selectedArtistId,\n        onShowRelatedArtists: handleShowRelated,\n        onFindConcerts: handleFindConcerts,\n        concertResults: concertResults,\n        concertLoading: concertLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(RelatedArtistsList, {\n        relatedArtists: relatedArtists,\n        onBack: handleBackToTop,\n        loading: relatedLoading,\n        handleFindConcerts: handleFindConcerts,\n        concertResults: concertResults,\n        concertLoading: concertLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'rgba(255, 0, 0, 0.2)',\n        padding: '10px 20px',\n        borderRadius: '5px',\n        margin: '20px 0',\n        maxWidth: '80%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KMKEtvHpiEpy8IlHe+MHhyzPPw4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","LoginButton","TopArtistsList","RelatedArtistsList","jsxDEV","_jsxDEV","Fragment","_Fragment","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","App","_s","token","setToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","topArtists","setTopArtists","error","setError","loading","setLoading","selectedArtistId","setSelectedArtistId","relatedArtists","setRelatedArtists","showRelated","setShowRelated","relatedLoading","setRelatedLoading","params","URLSearchParams","window","location","search","accessToken","get","rToken","expires","view","Number","newUrl","URL","href","searchParams","delete","history","replaceState","document","title","toString","refreshAccessToken","fetch","then","res","ok","Error","status","json","data","access_token","expires_in","catch","err","console","message","includes","refreshTime","timer","setTimeout","clearTimeout","headers","Authorization","items","length","id","finally","handleArtistSelect","artistId","handleLoginClick","handleShowRelated","log","directResponse","_directData$artists","directData","artists","directErrorText","text","directErr","rootResponse","rootText","rootErr","drakeId","encodeURIComponent","encodedResponse","_encodedData$artists","encodedData","encodedErrorText","encodedErr","allRelatedArtists","useDirectApi","artistsToProcess","slice","artist","requestUrl","name","_data$artists","response","errorBody","e","top3Related","artistError","uniqueArtistsMap","Map","forEach","has","set","uniqueArtists","Array","from","values","pushState","handleBackToTop","concertResults","setConcertResults","concertLoading","setConcertLoading","ticketmasterKey","REACT_APP_TICKETMASTER_API_KEY","handleFindConcerts","artistName","_embedded","events","prev","style","display","flexDirection","alignItems","justifyContent","minHeight","background","fontFamily","color","children","onClick","backendUrl","fileName","_jsxFileName","lineNumber","columnNumber","onArtistSelect","onShowRelatedArtists","onFindConcerts","onBack","padding","borderRadius","margin","maxWidth","_c","$RefreshReg$"],"sources":["/Users/joyzhang/vibent/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport LoginButton from './components/LoginButton';\nimport TopArtistsList from './components/TopArtistsList';\nimport RelatedArtistsList from './components/RelatedArtistsList';\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'https://vibent-api.onrender.com';\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [refreshToken, setRefreshToken] = useState(null);\n  const [expiresIn, setExpiresIn] = useState(null);\n  const [topArtists, setTopArtists] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedArtistId, setSelectedArtistId] = useState(null);\n  const [relatedArtists, setRelatedArtists] = useState([]);\n  const [showRelated, setShowRelated] = useState(false);\n  const [relatedLoading, setRelatedLoading] = useState(false);\n\n  // Parse tokens from URL params on load\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const accessToken = params.get('access_token');\n    const rToken = params.get('refresh_token');\n    const expires = params.get('expires_in');\n    \n    // Check for view state in URL\n    const view = params.get('view');\n    if (view === 'related') {\n      setShowRelated(true);\n    }\n\n    if (accessToken) {\n      setToken(accessToken);\n      setRefreshToken(rToken);\n      setExpiresIn(Number(expires) || 3600);\n      \n      // Clear only the token params, preserve view param if needed\n      const newUrl = new URL(window.location.href);\n      newUrl.searchParams.delete('access_token');\n      newUrl.searchParams.delete('refresh_token');\n      newUrl.searchParams.delete('expires_in');\n      window.history.replaceState({}, document.title, newUrl.toString());\n    }\n  }, []);\n\n  const refreshAccessToken = useCallback(() => {\n    if (!refreshToken) return;\n\n    fetch(`${BACKEND_URL}/refresh_token?refresh_token=${refreshToken}`)\n      .then(res => {\n        if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);\n        return res.json();\n      })\n      .then(data => {\n        if (data.access_token) {\n          setToken(data.access_token);\n          setExpiresIn(data.expires_in || 3600);\n          setError(null);\n        } else {\n          throw new Error('No access token in response');\n        }\n      })\n      .catch((err) => {\n        console.error(\"Token refresh failed:\", err);\n        setError(`Failed to refresh token: ${err.message}`);\n        if (!err.message.includes('Failed to fetch')) {\n          setToken(null);\n          setRefreshToken(null);\n        }\n      });\n  }, [refreshToken]);\n\n  useEffect(() => {\n    if (!expiresIn || !refreshToken) return;\n\n    const refreshTime = (expiresIn - 60) * 1000;\n    const timer = setTimeout(() => {\n      refreshAccessToken();\n    }, refreshTime);\n\n    return () => clearTimeout(timer);\n  }, [expiresIn, refreshToken, refreshAccessToken]);\n\n  useEffect(() => {\n    if (!token) return;\n\n    setLoading(true);\n    fetch('https://api.spotify.com/v1/me/top/artists', {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n      .then(res => {\n        if (!res.ok) {\n          if (res.status === 401) {\n            refreshAccessToken();\n            throw new Error('Token expired, attempting refresh');\n          }\n          throw new Error(`Failed to fetch top artists (${res.status})`);\n        }\n        return res.json();\n      })\n      .then(data => {\n        setTopArtists(data.items || []);\n        setError(null);\n        if (data.items && data.items.length) {\n          setSelectedArtistId(data.items[0].id);\n        }\n      })\n      .catch(err => {\n        console.error(\"Error fetching top artists:\", err);\n        setError(err.message);\n      })\n      .finally(() => setLoading(false));\n  }, [token, refreshAccessToken]);\n\n  const handleArtistSelect = (artistId) => {\n    setSelectedArtistId(artistId);\n  };\n\n  const handleLoginClick = () => {\n    if (!BACKEND_URL) {\n      setError(\"Backend URL is not configured. Please check your environment variables.\");\n      return;\n    }\n    window.location.href = `${BACKEND_URL}/login`;\n  };\n\n  const handleShowRelated = useCallback(async () => {\n    try {\n      setRelatedLoading(true);\n      setError(null); // Clear any previous errors\n      \n      // Try direct Spotify API call first as a test\n      console.log(\"Testing direct Spotify API call...\");\n      try {\n        const directResponse = await fetch('https://api.spotify.com/v1/artists/3TVXtAsR1Inumwj472S9r4/related-artists', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        console.log(`Direct Spotify API call status: ${directResponse.status}`);\n        \n        if (directResponse.ok) {\n          const directData = await directResponse.json();\n          console.log(`Direct call successful! Found ${directData.artists?.length} related artists`);\n        } else {\n          const directErrorText = await directResponse.text();\n          console.error(`Direct call failed: ${directErrorText}`);\n        }\n      } catch (directErr) {\n        console.error(\"Direct API call failed:\", directErr);\n      }\n      \n      // Print backend URL for verification\n      console.log(`Using backend URL: ${BACKEND_URL}`);\n      \n      // Test backend root endpoint to verify connectivity\n      try {\n        const rootResponse = await fetch(`${BACKEND_URL}/`);\n        console.log(`Backend root endpoint status: ${rootResponse.status}`);\n        if (rootResponse.ok) {\n          const rootText = await rootResponse.text();\n          console.log(`Backend root response: ${rootText}`);\n        }\n      } catch (rootErr) {\n        console.error(\"Backend connectivity test failed:\", rootErr);\n      }\n      \n      // Try with explicit encoding of the ID\n      const drakeId = encodeURIComponent(\"3TVXtAsR1Inumwj472S9r4\");\n      console.log(`Testing with URL-encoded Drake ID: ${drakeId}`);\n      \n      try {\n        const encodedResponse = await fetch(`${BACKEND_URL}/related-artists/${drakeId}?access_token=${encodeURIComponent(token)}`);\n        console.log(`Encoded request status: ${encodedResponse.status}`);\n        \n        if (encodedResponse.ok) {\n          const encodedData = await encodedResponse.json();\n          console.log(`Encoded request successful! Found ${encodedData.artists?.length} related artists`);\n        } else {\n          const encodedErrorText = await encodedResponse.text();\n          console.error(`Encoded request failed: ${encodedErrorText}`);\n        }\n      } catch (encodedErr) {\n        console.error(\"Encoded request failed:\", encodedErr);\n      }\n      \n      console.log(\"Fetching related artists for top artists...\");\n      let allRelatedArtists = [];\n      \n      // Use direct Spotify API as a fallback if backend route is failing\n      const useDirectApi = true; // Set to true to bypass your backend\n      \n      // Take only the first 5 top artists to avoid making too many requests\n      const artistsToProcess = topArtists.slice(0, 5);\n      \n      for (const artist of artistsToProcess) {\n        // Log the exact URL and artist ID\n        const requestUrl = `${BACKEND_URL}/related-artists/${artist.id}?access_token=${token}`;\n        console.log(`Making request to: ${requestUrl}`);\n        console.log(`Artist ID: \"${artist.id}\" for artist \"${artist.name}\"`);\n        \n        try {\n          const response = await fetch(requestUrl);\n          \n          console.log(`Response status for ${artist.name}: ${response.status}`);\n          \n          if (!response.ok) {\n            console.error(`Failed request for ${artist.name}. Status: ${response.status}`);\n            // Log the response body for more details\n            try {\n              const errorBody = await response.text();\n              console.error(`Error response body: ${errorBody}`);\n            } catch (e) {\n              console.error(\"Couldn't read error response body\");\n            }\n            \n            if (response.status === 404) {\n              console.log(`No artist found with ID ${artist.id} (${artist.name}). Skipping.`);\n            }\n            continue;\n          }\n          \n          const data = await response.json();\n          console.log(`Found ${data.artists?.length || 0} related artists for ${artist.name}`);\n          \n          if (data.artists && data.artists.length > 0) {\n            // Take top 3 related artists from each\n            const top3Related = data.artists.slice(0, 3);\n            allRelatedArtists = [...allRelatedArtists, ...top3Related];\n          }\n        } catch (artistError) {\n          console.error(`Error processing ${artist.name}:`, artistError);\n          // Continue to the next artist\n        }\n      }\n      \n      // Remove duplicates\n      const uniqueArtistsMap = new Map();\n      allRelatedArtists.forEach(artist => {\n        if (!uniqueArtistsMap.has(artist.id)) {\n          uniqueArtistsMap.set(artist.id, artist);\n        }\n      });\n      \n      const uniqueArtists = Array.from(uniqueArtistsMap.values());\n      console.log(`Total unique related artists found: ${uniqueArtists.length}`);\n      \n      setRelatedArtists(uniqueArtists);\n      setShowRelated(true);\n      \n      // Update URL to remember the view state\n      const newUrl = new URL(window.location.href);\n      newUrl.searchParams.set('view', 'related');\n      window.history.pushState({}, document.title, newUrl.toString());\n    } catch (err) {\n      console.error(\"Error in handleShowRelated:\", err);\n      setError(`Failed to fetch related artists: ${err.message}`);\n    } finally {\n      setRelatedLoading(false);\n    }\n  }, [token, topArtists, BACKEND_URL]);\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const view = params.get('view');\n    \n    if (view === 'related' && token && topArtists.length > 0 && !relatedArtists.length) {\n      console.log(\"View parameter is 'related', fetching related artists...\");\n      handleShowRelated();\n    }\n  }, [token, topArtists, relatedArtists.length, handleShowRelated]);\n\n  const handleBackToTop = () => {\n    setShowRelated(false);\n    \n    // Update URL to remember the view state\n    const newUrl = new URL(window.location.href);\n    newUrl.searchParams.delete('view');\n    window.history.pushState({}, document.title, newUrl.toString());\n  };\n  \n  const [concertResults, setConcertResults] = useState({});\nconst [concertLoading, setConcertLoading] = useState(null);\nconst ticketmasterKey = process.env.REACT_APP_TICKETMASTER_API_KEY;\n\nconst handleFindConcerts = async (artistName) => {\n  setConcertLoading(artistName);\n  setError(null);\n\n  try {\n    const response = await fetch(`https://app.ticketmaster.com/discovery/v2/events.json?keyword=${encodeURIComponent(artistName)}&apikey=${ticketmasterKey}`);\n    const data = await response.json();\n\n    if (data._embedded && data._embedded.events) {\n      setConcertResults(prev => ({\n        ...prev,\n        [artistName]: data._embedded.events.slice(0, 3), // show top 3\n      }));\n    } else {\n      setConcertResults(prev => ({\n        ...prev,\n        [artistName]: [],\n      }));\n    }\n  } catch (err) {\n    setError(`Error fetching concerts for ${artistName}: ${err.message}`);\n  } finally {\n    setConcertLoading(null);\n  }\n};\n\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: '100vh',\n      background: 'linear-gradient(to bottom, #191414, #1DB954)',\n      fontFamily: 'Arial, sans-serif',\n      color: 'white'\n    }}>\n      {!token ? (\n        <LoginButton onClick={handleLoginClick} backendUrl={BACKEND_URL} />\n      ) : (\n        <>\n          {!showRelated ? (\n            <TopArtistsList\n            topArtists={topArtists}\n            onArtistSelect={handleArtistSelect}\n            selectedArtistId={selectedArtistId}\n            onShowRelatedArtists={handleShowRelated}\n            onFindConcerts={handleFindConcerts}\n            concertResults={concertResults}\n            concertLoading={concertLoading}\n          />\n          \n          ) : (\n            <RelatedArtistsList\n              relatedArtists={relatedArtists}\n              onBack={handleBackToTop}\n              loading={relatedLoading}\n              handleFindConcerts={handleFindConcerts}\n              concertResults={concertResults}\n              concertLoading={concertLoading}\n            />\n\n          )}\n        </>\n      )}\n\n      {error && (\n        <div style={{\n          background: 'rgba(255, 0, 0, 0.2)',\n          padding: '10px 20px',\n          borderRadius: '5px',\n          margin: '20px 0',\n          maxWidth: '80%'\n        }}>\n          <p>Error: {error}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,kBAAkB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjE,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,iCAAiC;AAE1F,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACAD,SAAS,CAAC,MAAM;IACd,MAAMoC,MAAM,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC1D,MAAMC,WAAW,GAAGL,MAAM,CAACM,GAAG,CAAC,cAAc,CAAC;IAC9C,MAAMC,MAAM,GAAGP,MAAM,CAACM,GAAG,CAAC,eAAe,CAAC;IAC1C,MAAME,OAAO,GAAGR,MAAM,CAACM,GAAG,CAAC,YAAY,CAAC;;IAExC;IACA,MAAMG,IAAI,GAAGT,MAAM,CAACM,GAAG,CAAC,MAAM,CAAC;IAC/B,IAAIG,IAAI,KAAK,SAAS,EAAE;MACtBZ,cAAc,CAAC,IAAI,CAAC;IACtB;IAEA,IAAIQ,WAAW,EAAE;MACfxB,QAAQ,CAACwB,WAAW,CAAC;MACrBtB,eAAe,CAACwB,MAAM,CAAC;MACvBtB,YAAY,CAACyB,MAAM,CAACF,OAAO,CAAC,IAAI,IAAI,CAAC;;MAErC;MACA,MAAMG,MAAM,GAAG,IAAIC,GAAG,CAACV,MAAM,CAACC,QAAQ,CAACU,IAAI,CAAC;MAC5CF,MAAM,CAACG,YAAY,CAACC,MAAM,CAAC,cAAc,CAAC;MAC1CJ,MAAM,CAACG,YAAY,CAACC,MAAM,CAAC,eAAe,CAAC;MAC3CJ,MAAM,CAACG,YAAY,CAACC,MAAM,CAAC,YAAY,CAAC;MACxCb,MAAM,CAACc,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACC,KAAK,EAAER,MAAM,CAACS,QAAQ,CAAC,CAAC,CAAC;IACpE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,kBAAkB,GAAGvD,WAAW,CAAC,MAAM;IAC3C,IAAI,CAACgB,YAAY,EAAE;IAEnBwC,KAAK,CAAC,GAAGhD,WAAW,gCAAgCQ,YAAY,EAAE,CAAC,CAChEyC,IAAI,CAACC,GAAG,IAAI;MACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,GAAG,CAACG,MAAM,EAAE,CAAC;MACjE,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACC,YAAY,EAAE;QACrBjD,QAAQ,CAACgD,IAAI,CAACC,YAAY,CAAC;QAC3B7C,YAAY,CAAC4C,IAAI,CAACE,UAAU,IAAI,IAAI,CAAC;QACrC1C,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,MAAM;QACL,MAAM,IAAIqC,KAAK,CAAC,6BAA6B,CAAC;MAChD;IACF,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAAC9C,KAAK,CAAC,uBAAuB,EAAE6C,GAAG,CAAC;MAC3C5C,QAAQ,CAAC,4BAA4B4C,GAAG,CAACE,OAAO,EAAE,CAAC;MACnD,IAAI,CAACF,GAAG,CAACE,OAAO,CAACC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;QAC5CvD,QAAQ,CAAC,IAAI,CAAC;QACdE,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC,CAAC;EACN,CAAC,EAAE,CAACD,YAAY,CAAC,CAAC;EAElBlB,SAAS,CAAC,MAAM;IACd,IAAI,CAACoB,SAAS,IAAI,CAACF,YAAY,EAAE;IAEjC,MAAMuD,WAAW,GAAG,CAACrD,SAAS,GAAG,EAAE,IAAI,IAAI;IAC3C,MAAMsD,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BlB,kBAAkB,CAAC,CAAC;IACtB,CAAC,EAAEgB,WAAW,CAAC;IAEf,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,CAACtD,SAAS,EAAEF,YAAY,EAAEuC,kBAAkB,CAAC,CAAC;EAEjDzD,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,KAAK,EAAE;IAEZW,UAAU,CAAC,IAAI,CAAC;IAChB+B,KAAK,CAAC,2CAA2C,EAAE;MACjDmB,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAU9D,KAAK;MAAG;IAC9C,CAAC,CAAC,CACC2C,IAAI,CAACC,GAAG,IAAI;MACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,IAAID,GAAG,CAACG,MAAM,KAAK,GAAG,EAAE;UACtBN,kBAAkB,CAAC,CAAC;UACpB,MAAM,IAAIK,KAAK,CAAC,mCAAmC,CAAC;QACtD;QACA,MAAM,IAAIA,KAAK,CAAC,gCAAgCF,GAAG,CAACG,MAAM,GAAG,CAAC;MAChE;MACA,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;MACZ1C,aAAa,CAAC0C,IAAI,CAACc,KAAK,IAAI,EAAE,CAAC;MAC/BtD,QAAQ,CAAC,IAAI,CAAC;MACd,IAAIwC,IAAI,CAACc,KAAK,IAAId,IAAI,CAACc,KAAK,CAACC,MAAM,EAAE;QACnCnD,mBAAmB,CAACoC,IAAI,CAACc,KAAK,CAAC,CAAC,CAAC,CAACE,EAAE,CAAC;MACvC;IACF,CAAC,CAAC,CACDb,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAAC9C,KAAK,CAAC,6BAA6B,EAAE6C,GAAG,CAAC;MACjD5C,QAAQ,CAAC4C,GAAG,CAACE,OAAO,CAAC;IACvB,CAAC,CAAC,CACDW,OAAO,CAAC,MAAMvD,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,CAACX,KAAK,EAAEyC,kBAAkB,CAAC,CAAC;EAE/B,MAAM0B,kBAAkB,GAAIC,QAAQ,IAAK;IACvCvD,mBAAmB,CAACuD,QAAQ,CAAC;EAC/B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAAC3E,WAAW,EAAE;MAChBe,QAAQ,CAAC,yEAAyE,CAAC;MACnF;IACF;IACAa,MAAM,CAACC,QAAQ,CAACU,IAAI,GAAG,GAAGvC,WAAW,QAAQ;EAC/C,CAAC;EAED,MAAM4E,iBAAiB,GAAGpF,WAAW,CAAC,YAAY;IAChD,IAAI;MACFiC,iBAAiB,CAAC,IAAI,CAAC;MACvBV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEhB;MACA6C,OAAO,CAACiB,GAAG,CAAC,oCAAoC,CAAC;MACjD,IAAI;QACF,MAAMC,cAAc,GAAG,MAAM9B,KAAK,CAAC,2EAA2E,EAAE;UAC9GmB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAU9D,KAAK;UAAG;QAC9C,CAAC,CAAC;QAEFsD,OAAO,CAACiB,GAAG,CAAC,mCAAmCC,cAAc,CAACzB,MAAM,EAAE,CAAC;QAEvE,IAAIyB,cAAc,CAAC3B,EAAE,EAAE;UAAA,IAAA4B,mBAAA;UACrB,MAAMC,UAAU,GAAG,MAAMF,cAAc,CAACxB,IAAI,CAAC,CAAC;UAC9CM,OAAO,CAACiB,GAAG,CAAC,kCAAAE,mBAAA,GAAiCC,UAAU,CAACC,OAAO,cAAAF,mBAAA,uBAAlBA,mBAAA,CAAoBT,MAAM,kBAAkB,CAAC;QAC5F,CAAC,MAAM;UACL,MAAMY,eAAe,GAAG,MAAMJ,cAAc,CAACK,IAAI,CAAC,CAAC;UACnDvB,OAAO,CAAC9C,KAAK,CAAC,uBAAuBoE,eAAe,EAAE,CAAC;QACzD;MACF,CAAC,CAAC,OAAOE,SAAS,EAAE;QAClBxB,OAAO,CAAC9C,KAAK,CAAC,yBAAyB,EAAEsE,SAAS,CAAC;MACrD;;MAEA;MACAxB,OAAO,CAACiB,GAAG,CAAC,sBAAsB7E,WAAW,EAAE,CAAC;;MAEhD;MACA,IAAI;QACF,MAAMqF,YAAY,GAAG,MAAMrC,KAAK,CAAC,GAAGhD,WAAW,GAAG,CAAC;QACnD4D,OAAO,CAACiB,GAAG,CAAC,iCAAiCQ,YAAY,CAAChC,MAAM,EAAE,CAAC;QACnE,IAAIgC,YAAY,CAAClC,EAAE,EAAE;UACnB,MAAMmC,QAAQ,GAAG,MAAMD,YAAY,CAACF,IAAI,CAAC,CAAC;UAC1CvB,OAAO,CAACiB,GAAG,CAAC,0BAA0BS,QAAQ,EAAE,CAAC;QACnD;MACF,CAAC,CAAC,OAAOC,OAAO,EAAE;QAChB3B,OAAO,CAAC9C,KAAK,CAAC,mCAAmC,EAAEyE,OAAO,CAAC;MAC7D;;MAEA;MACA,MAAMC,OAAO,GAAGC,kBAAkB,CAAC,wBAAwB,CAAC;MAC5D7B,OAAO,CAACiB,GAAG,CAAC,sCAAsCW,OAAO,EAAE,CAAC;MAE5D,IAAI;QACF,MAAME,eAAe,GAAG,MAAM1C,KAAK,CAAC,GAAGhD,WAAW,oBAAoBwF,OAAO,iBAAiBC,kBAAkB,CAACnF,KAAK,CAAC,EAAE,CAAC;QAC1HsD,OAAO,CAACiB,GAAG,CAAC,2BAA2Ba,eAAe,CAACrC,MAAM,EAAE,CAAC;QAEhE,IAAIqC,eAAe,CAACvC,EAAE,EAAE;UAAA,IAAAwC,oBAAA;UACtB,MAAMC,WAAW,GAAG,MAAMF,eAAe,CAACpC,IAAI,CAAC,CAAC;UAChDM,OAAO,CAACiB,GAAG,CAAC,sCAAAc,oBAAA,GAAqCC,WAAW,CAACX,OAAO,cAAAU,oBAAA,uBAAnBA,oBAAA,CAAqBrB,MAAM,kBAAkB,CAAC;QACjG,CAAC,MAAM;UACL,MAAMuB,gBAAgB,GAAG,MAAMH,eAAe,CAACP,IAAI,CAAC,CAAC;UACrDvB,OAAO,CAAC9C,KAAK,CAAC,2BAA2B+E,gBAAgB,EAAE,CAAC;QAC9D;MACF,CAAC,CAAC,OAAOC,UAAU,EAAE;QACnBlC,OAAO,CAAC9C,KAAK,CAAC,yBAAyB,EAAEgF,UAAU,CAAC;MACtD;MAEAlC,OAAO,CAACiB,GAAG,CAAC,6CAA6C,CAAC;MAC1D,IAAIkB,iBAAiB,GAAG,EAAE;;MAE1B;MACA,MAAMC,YAAY,GAAG,IAAI,CAAC,CAAC;;MAE3B;MACA,MAAMC,gBAAgB,GAAGrF,UAAU,CAACsF,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAE/C,KAAK,MAAMC,MAAM,IAAIF,gBAAgB,EAAE;QACrC;QACA,MAAMG,UAAU,GAAG,GAAGpG,WAAW,oBAAoBmG,MAAM,CAAC5B,EAAE,iBAAiBjE,KAAK,EAAE;QACtFsD,OAAO,CAACiB,GAAG,CAAC,sBAAsBuB,UAAU,EAAE,CAAC;QAC/CxC,OAAO,CAACiB,GAAG,CAAC,eAAesB,MAAM,CAAC5B,EAAE,iBAAiB4B,MAAM,CAACE,IAAI,GAAG,CAAC;QAEpE,IAAI;UAAA,IAAAC,aAAA;UACF,MAAMC,QAAQ,GAAG,MAAMvD,KAAK,CAACoD,UAAU,CAAC;UAExCxC,OAAO,CAACiB,GAAG,CAAC,uBAAuBsB,MAAM,CAACE,IAAI,KAAKE,QAAQ,CAAClD,MAAM,EAAE,CAAC;UAErE,IAAI,CAACkD,QAAQ,CAACpD,EAAE,EAAE;YAChBS,OAAO,CAAC9C,KAAK,CAAC,sBAAsBqF,MAAM,CAACE,IAAI,aAAaE,QAAQ,CAAClD,MAAM,EAAE,CAAC;YAC9E;YACA,IAAI;cACF,MAAMmD,SAAS,GAAG,MAAMD,QAAQ,CAACpB,IAAI,CAAC,CAAC;cACvCvB,OAAO,CAAC9C,KAAK,CAAC,wBAAwB0F,SAAS,EAAE,CAAC;YACpD,CAAC,CAAC,OAAOC,CAAC,EAAE;cACV7C,OAAO,CAAC9C,KAAK,CAAC,mCAAmC,CAAC;YACpD;YAEA,IAAIyF,QAAQ,CAAClD,MAAM,KAAK,GAAG,EAAE;cAC3BO,OAAO,CAACiB,GAAG,CAAC,2BAA2BsB,MAAM,CAAC5B,EAAE,KAAK4B,MAAM,CAACE,IAAI,cAAc,CAAC;YACjF;YACA;UACF;UAEA,MAAM9C,IAAI,GAAG,MAAMgD,QAAQ,CAACjD,IAAI,CAAC,CAAC;UAClCM,OAAO,CAACiB,GAAG,CAAC,SAAS,EAAAyB,aAAA,GAAA/C,IAAI,CAAC0B,OAAO,cAAAqB,aAAA,uBAAZA,aAAA,CAAchC,MAAM,KAAI,CAAC,wBAAwB6B,MAAM,CAACE,IAAI,EAAE,CAAC;UAEpF,IAAI9C,IAAI,CAAC0B,OAAO,IAAI1B,IAAI,CAAC0B,OAAO,CAACX,MAAM,GAAG,CAAC,EAAE;YAC3C;YACA,MAAMoC,WAAW,GAAGnD,IAAI,CAAC0B,OAAO,CAACiB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YAC5CH,iBAAiB,GAAG,CAAC,GAAGA,iBAAiB,EAAE,GAAGW,WAAW,CAAC;UAC5D;QACF,CAAC,CAAC,OAAOC,WAAW,EAAE;UACpB/C,OAAO,CAAC9C,KAAK,CAAC,oBAAoBqF,MAAM,CAACE,IAAI,GAAG,EAAEM,WAAW,CAAC;UAC9D;QACF;MACF;;MAEA;MACA,MAAMC,gBAAgB,GAAG,IAAIC,GAAG,CAAC,CAAC;MAClCd,iBAAiB,CAACe,OAAO,CAACX,MAAM,IAAI;QAClC,IAAI,CAACS,gBAAgB,CAACG,GAAG,CAACZ,MAAM,CAAC5B,EAAE,CAAC,EAAE;UACpCqC,gBAAgB,CAACI,GAAG,CAACb,MAAM,CAAC5B,EAAE,EAAE4B,MAAM,CAAC;QACzC;MACF,CAAC,CAAC;MAEF,MAAMc,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACP,gBAAgB,CAACQ,MAAM,CAAC,CAAC,CAAC;MAC3DxD,OAAO,CAACiB,GAAG,CAAC,uCAAuCoC,aAAa,CAAC3C,MAAM,EAAE,CAAC;MAE1EjD,iBAAiB,CAAC4F,aAAa,CAAC;MAChC1F,cAAc,CAAC,IAAI,CAAC;;MAEpB;MACA,MAAMc,MAAM,GAAG,IAAIC,GAAG,CAACV,MAAM,CAACC,QAAQ,CAACU,IAAI,CAAC;MAC5CF,MAAM,CAACG,YAAY,CAACwE,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC;MAC1CpF,MAAM,CAACc,OAAO,CAAC2E,SAAS,CAAC,CAAC,CAAC,EAAEzE,QAAQ,CAACC,KAAK,EAAER,MAAM,CAACS,QAAQ,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZC,OAAO,CAAC9C,KAAK,CAAC,6BAA6B,EAAE6C,GAAG,CAAC;MACjD5C,QAAQ,CAAC,oCAAoC4C,GAAG,CAACE,OAAO,EAAE,CAAC;IAC7D,CAAC,SAAS;MACRpC,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,CAACnB,KAAK,EAAEM,UAAU,EAAEZ,WAAW,CAAC,CAAC;EAEpCV,SAAS,CAAC,MAAM;IACd,MAAMoC,MAAM,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC1D,MAAMK,IAAI,GAAGT,MAAM,CAACM,GAAG,CAAC,MAAM,CAAC;IAE/B,IAAIG,IAAI,KAAK,SAAS,IAAI7B,KAAK,IAAIM,UAAU,CAAC0D,MAAM,GAAG,CAAC,IAAI,CAAClD,cAAc,CAACkD,MAAM,EAAE;MAClFV,OAAO,CAACiB,GAAG,CAAC,0DAA0D,CAAC;MACvED,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACtE,KAAK,EAAEM,UAAU,EAAEQ,cAAc,CAACkD,MAAM,EAAEM,iBAAiB,CAAC,CAAC;EAEjE,MAAM0C,eAAe,GAAGA,CAAA,KAAM;IAC5B/F,cAAc,CAAC,KAAK,CAAC;;IAErB;IACA,MAAMc,MAAM,GAAG,IAAIC,GAAG,CAACV,MAAM,CAACC,QAAQ,CAACU,IAAI,CAAC;IAC5CF,MAAM,CAACG,YAAY,CAACC,MAAM,CAAC,MAAM,CAAC;IAClCb,MAAM,CAACc,OAAO,CAAC2E,SAAS,CAAC,CAAC,CAAC,EAAEzE,QAAQ,CAACC,KAAK,EAAER,MAAM,CAACS,QAAQ,CAAC,CAAC,CAAC;EACjE,CAAC;EAED,MAAM,CAACyE,cAAc,EAAEC,iBAAiB,CAAC,GAAGjI,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACkI,cAAc,EAAEC,iBAAiB,CAAC,GAAGnI,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMoI,eAAe,GAAG1H,OAAO,CAACC,GAAG,CAAC0H,8BAA8B;EAElE,MAAMC,kBAAkB,GAAG,MAAOC,UAAU,IAAK;IAC/CJ,iBAAiB,CAACI,UAAU,CAAC;IAC7B/G,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMwF,QAAQ,GAAG,MAAMvD,KAAK,CAAC,iEAAiEyC,kBAAkB,CAACqC,UAAU,CAAC,WAAWH,eAAe,EAAE,CAAC;MACzJ,MAAMpE,IAAI,GAAG,MAAMgD,QAAQ,CAACjD,IAAI,CAAC,CAAC;MAElC,IAAIC,IAAI,CAACwE,SAAS,IAAIxE,IAAI,CAACwE,SAAS,CAACC,MAAM,EAAE;QAC3CR,iBAAiB,CAACS,IAAI,KAAK;UACzB,GAAGA,IAAI;UACP,CAACH,UAAU,GAAGvE,IAAI,CAACwE,SAAS,CAACC,MAAM,CAAC9B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE;QACnD,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACLsB,iBAAiB,CAACS,IAAI,KAAK;UACzB,GAAGA,IAAI;UACP,CAACH,UAAU,GAAG;QAChB,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC,OAAOnE,GAAG,EAAE;MACZ5C,QAAQ,CAAC,+BAA+B+G,UAAU,KAAKnE,GAAG,CAACE,OAAO,EAAE,CAAC;IACvE,CAAC,SAAS;MACR6D,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC;EAGC,oBACE7H,OAAA;IAAKqI,KAAK,EAAE;MACVC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,SAAS,EAAE,OAAO;MAClBC,UAAU,EAAE,8CAA8C;MAC1DC,UAAU,EAAE,mBAAmB;MAC/BC,KAAK,EAAE;IACT,CAAE;IAAAC,QAAA,GACC,CAACrI,KAAK,gBACLT,OAAA,CAACJ,WAAW;MAACmJ,OAAO,EAAEjE,gBAAiB;MAACkE,UAAU,EAAE7I;IAAY;MAAA8I,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEnEpJ,OAAA,CAAAE,SAAA;MAAA4I,QAAA,EACG,CAACrH,WAAW,gBACXzB,OAAA,CAACH,cAAc;QACfkB,UAAU,EAAEA,UAAW;QACvBsI,cAAc,EAAEzE,kBAAmB;QACnCvD,gBAAgB,EAAEA,gBAAiB;QACnCiI,oBAAoB,EAAEvE,iBAAkB;QACxCwE,cAAc,EAAEvB,kBAAmB;QACnCN,cAAc,EAAEA,cAAe;QAC/BE,cAAc,EAAEA;MAAe;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,gBAGApJ,OAAA,CAACF,kBAAkB;QACjByB,cAAc,EAAEA,cAAe;QAC/BiI,MAAM,EAAE/B,eAAgB;QACxBtG,OAAO,EAAEQ,cAAe;QACxBqG,kBAAkB,EAAEA,kBAAmB;QACvCN,cAAc,EAAEA,cAAe;QAC/BE,cAAc,EAAEA;MAAe;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAEF,gBACD,CACH,EAEAnI,KAAK,iBACJjB,OAAA;MAAKqI,KAAK,EAAE;QACVM,UAAU,EAAE,sBAAsB;QAClCc,OAAO,EAAE,WAAW;QACpBC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,QAAQ;QAChBC,QAAQ,EAAE;MACZ,CAAE;MAAAd,QAAA,eACA9I,OAAA;QAAA8I,QAAA,GAAG,SAAO,EAAC7H,KAAK;MAAA;QAAAgI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5I,EAAA,CAtWQD,GAAG;AAAAsJ,EAAA,GAAHtJ,GAAG;AAwWZ,eAAeA,GAAG;AAAC,IAAAsJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}